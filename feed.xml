<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://murlab.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://murlab.github.io/" rel="alternate" type="text/html" /><updated>2017-12-17T22:42:36+03:00</updated><id>https://murlab.github.io/</id><title type="html">Mur Laboratory</title><subtitle>Обожаю сладкое, аниме и игры. Так же пытаюсь делать свои с помощью RPG Maker и Godot. Иногда рисую, да,… (ღ˘⌣˘ღ)</subtitle><entry><title type="html">Архивация</title><link href="https://murlab.github.io/blog/Arhivacija/" rel="alternate" type="text/html" title="Архивация" /><published>2017-12-17T01:00:00+03:00</published><updated>2017-12-17T01:00:00+03:00</updated><id>https://murlab.github.io/blog/Arhivacija</id><content type="html" xml:base="https://murlab.github.io/blog/Arhivacija/">&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;Итак, процесс архивации, или если быть точнее переезда завершен. В ходе переноса были подправленные некоторые ошибки, неточности и опечатки. Так, что здесь теперь более грамотная версия материала. Старый сайт я пока тоже удалять не стану.&lt;/p&gt;

&lt;p&gt;Конечно записи за этот срок сильно устарели и по большей части представляют собой чисто историческую ценность, но тем не менее путь тоже тут побудут.&lt;/p&gt;

&lt;p&gt;Если кому интересно, все старые записи можно найти в разделе «&lt;a href=&quot;/archive/&quot;&gt;Архив постов&lt;/a&gt;», ну или перейти прямо по ссылкам тут:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Vsem%20privet!/&quot;&gt;Всем привет!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Pishem%20svoj%20pervyj%20plagin%20dla%20RPG%20Maker%20MV/&quot;&gt;Пишем свой первый плагин для RPG Maker MV&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/&quot;&gt;Пишем плагин для отображения больших аватарок&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Zapuskaem%20proekt%20v%20brauzere/&quot;&gt;Запускаем проект в браузере&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="archive" /><summary type="html">Всем привет!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/Arhivacija/book_title.png" /></entry><entry><title type="html">October, Inktober, 8bit… Octobit!</title><link href="https://murlab.github.io/blog/October,%20Inktober,%208bit...%20Octobit!/" rel="alternate" type="text/html" title="October, Inktober, 8bit... Octobit!" /><published>2017-12-11T16:28:28+03:00</published><updated>2017-12-11T16:28:28+03:00</updated><id>https://murlab.github.io/blog/October,%20Inktober,%208bit...%20Octobit!</id><content type="html" xml:base="https://murlab.github.io/blog/October,%20Inktober,%208bit...%20Octobit!/">&lt;p&gt;Иногда на меня находит, и я люблю порисовать. Этой осенью так совпало, мне захотелось, а тут подоспел некоторый челендж или «вызов» (соревнование по русски).&lt;/p&gt;

&lt;p&gt;Не для кого не секрет, что художник птица гордая, пока не пн,… гхм о чём это я. Ах да, оказывается уже не первый год, каждый октябрь происходит такое широкомасштабное мероприятие, как «&lt;a href=&quot;https://twitter.com/inktober&quot;&gt;Inktober&lt;/a&gt;».&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/Inktober.png&quot; class=&quot;imgLeft&quot; /&gt;Придумал его в 2009 году такой крутой дядька как &lt;a href=&quot;http://mrjakeparker.com/&quot;&gt;Джейк Паркер&lt;/a&gt;, а интернет его быстренько подхватил, и буквально за несколько лет оно стало массовым мероприятием. Само слово «Inktober», это вариация на тему октябрь (october) + собственно чернила (Ink).&lt;/p&gt;

&lt;p&gt;Основная идея «Inktober» это рисовать каждый день по одной картинке. Не важно, что это будет просто набросок, или что-то более серьёзное, главное рисовать, не останавливаясь и так сказать улучшать свои навыки.&lt;/p&gt;

&lt;p&gt;Для многих стало настоящим мучением, что же нарисовать? И что бы облегчить муки выбора, а заодно поощрить дух соревнования, стали предлагать задания (темы) на каждый день. Конечно авторы могут и не прислушиваться к заданной теме и творить что им заблагорассудится, но порой весьма очень интересно увидеть, как разные авторы видят одну и туже тему.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/BrunoMoraes.png&quot; class=&quot;imgRight&quot; /&gt;На ряду с обычным «Inktober», где принято рисовать в классическом стиле (карандаши, кисти, маркеры итд) на бумаге, появилась отдельная ветка «&lt;a href=&quot;https://twitter.com/search?q=%23octobit&amp;amp;src=typd&quot;&gt;Octobit&lt;/a&gt;» за авторством &lt;a href=&quot;https://twitter.com/brunopixels&quot;&gt;Бруно Мораес&lt;/a&gt; из далёкой Бразилии. Как не трудно догадаться из названия основная тема картинок в данной категории — 8бит. Или точнее всё-таки будет сказать графика, созданная на компьютере в стиле pixelart. По сути ограничений в 8 бит по цветовой палитре здесь нет, так что это скорее уже дань памяти. Так же как и в случае с «Inktober», «Octobit» это тоже вариация октября и восемь и бит, такой вот немного замудрёный ребус (:&lt;/p&gt;

&lt;p&gt;В этом году Бруно так же предложил свой список список тем. Причём самое интересное, темы разделены как бы на «мило» и «немило». Можно выбрать то, что вам ближе по духу, а можно попробовать и совместить две темы в одной картинке.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/Octobit.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Так же, как и «Inktober», «Octobit» длился 31 день и состоял из следующих тем (отдельное спасибо за подготовленный перевод Dmy со светлой):&lt;/p&gt;

&lt;p&gt;Слева от дефиса «милый вариант», справа — «не милый».&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Клоун / клоун&lt;/li&gt;
  &lt;li&gt;Космонавт / инопланетянин&lt;/li&gt;
  &lt;li&gt;Жертва / хищник&lt;/li&gt;
  &lt;li&gt;Свежее / гнилое&lt;/li&gt;
  &lt;li&gt;Максимум четыре ноги / слишком много ног&lt;/li&gt;
  &lt;li&gt;Кто-то привлекательный / человек, от которого становится не по себе&lt;/li&gt;
  &lt;li&gt;Древесный дом / город-призрак&lt;/li&gt;
  &lt;li&gt;Добрая ведьма / злая нехорошая женщина [в оригинале грубее]&lt;/li&gt;
  &lt;li&gt;Завтрак / яд&lt;/li&gt;
  &lt;li&gt;Игровая площадка / изолированный&lt;/li&gt;
  &lt;li&gt;Луна-парк / шоу уродов&lt;/li&gt;
  &lt;li&gt;Куклы / одержимость&lt;/li&gt;
  &lt;li&gt;Мультяшное / фильм-ужастик&lt;/li&gt;
  &lt;li&gt;Суши / кайдзю&lt;/li&gt;
  &lt;li&gt;Путешествие / сбитое на дороге животное&lt;/li&gt;
  &lt;li&gt;Младенцы / подростки&lt;/li&gt;
  &lt;li&gt;Флора / шипы&lt;/li&gt;
  &lt;li&gt;Чаепитие / культ&lt;/li&gt;
  &lt;li&gt;Бабочка / ураган&lt;/li&gt;
  &lt;li&gt;Радуга / монохромное&lt;/li&gt;
  &lt;li&gt;Домик из одеял / подвал&lt;/li&gt;
  &lt;li&gt;Щенок / зверское&lt;/li&gt;
  &lt;li&gt;Грибы / радиация&lt;/li&gt;
  &lt;li&gt;Крошечный домик / клаустрофобия&lt;/li&gt;
  &lt;li&gt;Кораловый риф / глубоководное море&lt;/li&gt;
  &lt;li&gt;Розовый как младенец / пепельно-серый&lt;/li&gt;
  &lt;li&gt;Торт на день рождения / старое&lt;/li&gt;
  &lt;li&gt;Костёр / городская легенда&lt;/li&gt;
  &lt;li&gt;Вздремнуть / бессонница&lt;/li&gt;
  &lt;li&gt;Старый друг / тот, кто занимается травлей&lt;/li&gt;
  &lt;li&gt;Счастливый конец / все умирают&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Многие рисовали небольшие наброски или вовсе спрайты, но мне захотелось попробовать свои силы в создании полноценных картинок. Конечно это требовало по нескольку часов в день, как на обработку самой идеи, так и на рисовку собственно самой задумки. Ну и как не трудно догадаться хватило меня не на долго, если быть точнее дней на пять. Причём всё окончательно «умерло» по причине того, что никак не удавалось найти тут самую «ноту», что бы вот все сказали: «Ух!». Работа шестого дня перерисовывалась несколько раз, а потом навалилась основная работа и банально стало не до художеств.&lt;/p&gt;

&lt;p&gt;Тем не менее я думаю вам будет интересно посмотреть, что же у меня получилось за пять дней моего короткого участия.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День первый, «Клоун»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/octobit_01A.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Вообще, мне клоуны не нравятся, да и собственно никогда не нравились. Даже в детстве мне сложно было понять радость от разукрашенных физиономий, безразмерных ботинок и взъерошенных рыжих волос, а что уж говорить про сегодняшний день. Поэтому мне было достаточно сложно выбрать, что же нарисовать. Многие конечно же кинулись сразу рисовать в пику популярности фильма «Оно». Но мне почему-то сразу вспомнился Красти из Симпсонов. Эдакий «хитро-жёлтый» предприниматель. Вечно пытается всех надурить, пренеприятнейший характер и собственно само олицетворения клоуна в моём отношении к этой братии. Возможно в жизни они и не плохие ребята, но вот у меня такое восприятие.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День второй, «Космонавт / инопланетянин»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/octobit_02.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ну тут уже моя душа как говорится понеслась в рай (: Мне захотелось совместить, как говорится два в одном. Идея картинки была придумана практически сразу. Прообраз астронавта был взят с плакатов 60х годов, о покорении космоса, а дальше захотелось добавить «сложную» ситуацию, но всё-таки с хеппи-эндом (:  В результате чего получилась такая вот неожиданная встреча, мол мы хорошие, вон цветочек принесли, хоть и тентакли XD&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День третий, « Жертва / хищник»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/octobit_03.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Идея опять совместить два в одно пришла случайно. Изначально была просто задумка нарисовать ужасную акулу, мол бойтесь. Но к сожалению, или к радости, очень долго никак не получался хвост. То он тонкий, то неестественно выгнут, в результате чего пришлось брать фото настоящей акулы и просто обрисовывать контуры &amp;gt;_&amp;lt;’ И уже в процессе обрисовки, мне вдруг пришла интересная идея, запихнуть акулу в аквариум, получилась такая картинка-вопрос, мол жертва или же хищник?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День четвёртый, «Свежее / гнилое»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/octobit_04.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;И снова я извращаюсь с идей два в одном. Идея долго не приходила, рисовать что-то банально свежее не хотелось, а уж тратить кучу времени на попытку реализовать что-то гнилое, мне тоже показалось ещё то сомнительное удовольствие. И тут уже разглядывая яблоко с коричневым бочком, мне пришла в голову сумасшедшая идея. А что если нарисовать яблоко в такой цветовой гамме, что сразу и не понять, то ли оно свежее, то ли уже сгнившее. Что получилось в итоге вы видите (:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День пятый, «Максимум четыре ноги / слишком много ног»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-11/October, Inktober, 8bit... Octobit!/octobit_05.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Тут у меня сомнений уже не было что рисовать. Конечно же слишком много ног, но во главе с тем, у кого ног было поменьше. Особо рассказывать об идеи тут нечего, единственное, что скажу, что я не то что бы боюсь, но скажем так не люблю пауков, поэтому при каждом удобном случает с ними контактирую, беру на руки, воспитываю так сказать в себе силу воли, хотя сердце в этот момент в пятках XD&lt;/p&gt;

&lt;p&gt;Шестой день к сожалению, не задался. Возможно когда-нибудь у меня будет ещё настроение и время и я наверстаю упущенный октябрь 2017, но, а пока на этом всё!&lt;/p&gt;

&lt;p&gt;Всем всего, ещё увидимся ;)&lt;/p&gt;</content><author><name></name></author><category term="octobit" /><category term="inktober" /><category term="8bit" /><category term="pixelart" /><category term="story" /><summary type="html">Иногда на меня находит, и я люблю порисовать. Этой осенью так совпало, мне захотелось, а тут подоспел некоторый челендж или «вызов» (соревнование по русски).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/October,%20Inktober,%208bit...%20Octobit!/octobit_title.png" /></entry><entry><title type="html">Godot the begining</title><link href="https://murlab.github.io/blog/Godot%20the%20begining/" rel="alternate" type="text/html" title="Godot the begining" /><published>2017-12-08T13:00:00+03:00</published><updated>2017-12-08T13:00:00+03:00</updated><id>https://murlab.github.io/blog/Godot%20the%20begining</id><content type="html" xml:base="https://murlab.github.io/blog/Godot%20the%20begining/">&lt;p&gt;Где-то примерно в середине лета мне предложили изучить такую интересную штуку как «&lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot Engine&lt;/a&gt;», тем более, что она доступна бесплатно и есть даже в &lt;a href=&quot;http://store.steampowered.com/app/404790/Godot_Engine/&quot;&gt;Steam&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;В отличии от того же RPG Maker, Godot это уже серьёзная система или как говорят «движок». Он разрабатывается сообществом Godot Engine Community и использовался внутри некоторых компаний Латинской Америки.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Среда разработчика работает на Windows, Linux, OS X, BSD и Haiku и может экспортировать игровые проекты на ПК, консоли, мобильные и веб платформы.&lt;/p&gt;

&lt;p&gt;Godot можно смело назвать конструктором конструкторов. Это своего рода коробка с кубиками Lego, с той лишь разницей, что в Lego у вас много разных кубиков, но у всех жестко заданы свойства (форма, размер, количество соединительных элементов, цвет итд). В Godot вы вольны создавать свои собственные «кубики» с какими угодно свойствами и параметрами. И самое главное, что из нескольких «кубиков» вы можете создавать новые, задавать им новые свойства, объединять или удалять, в общем всё как в настоящем программировании.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/neko_love_godot.png&quot; class=&quot;imgLeft&quot; /&gt; В Godot отличный скриптовый язык (&lt;a href=&quot;http://docs.godotengine.org/en/stable/learning/scripting/gdscript/gdscript_basics.html&quot;&gt;GDScript&lt;/a&gt;) с большими возможностями, который очень похож по синтаксису на Python. Конечно, если вы раньше никогда не занимались программированием, вам будет немного труднее разобраться, возможно стоит начать с чего-то попроще, например, с RPG Maker. Но если вы владеете хотя бы базовыми знаниями, то вы без труда (в большинстве случаев) быстро получите желаемый результат.&lt;/p&gt;

&lt;p&gt;В системе достаточно много готовых «кубиков» таких как спрайт, полигональный объект, камера итд. Но кроме этого есть так называемые модули «физических свойств». Например, можно «наделить» свой «кубик» физическими свойствами, и он будет автоматически падать вниз, до тех пор, пока не встретится с другим объектом, у которого указано, что он является поверхностью. Таким образом отпадает необходимость в проверке столкновений, система делает это автоматически.&lt;/p&gt;

&lt;p&gt;Впрочем, если вы привыкли всё контролировать самостоятельно, в Godot отличная система сообщений (event) и вы можете обрабатывать ситуацию с помощью скриптов.&lt;/p&gt;

&lt;p&gt;Но вернёмся к середине лета. Особых идей у меня не было, но лапы уже чесались и изучать систему с чего-то начинать надо. В этот момент на «&lt;a href=&quot;http://rpgmaker.su/&quot;&gt;нейтральной полосе&lt;/a&gt;» проходил конкурс и одной из номинантов была игра «&lt;a href=&quot;http://rpgmaker.su/f102/[rtp]-the-one-3511/&quot;&gt;The One&lt;/a&gt;» от Лис.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/the_one.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Игра представляла из себя квест-бродилку, с изучением комнат, предметов, поиском ответов и небольшими головоломками. События происходят в некой сумрачной «лаборатории», из-за чего многие приписали игрушке «хоррор», хотя сама автор так и не считает.&lt;/p&gt;

&lt;p&gt;Мне понравилась сама идея и как мне показалось простота в реализации. Тем более что опыта работы с 3D у меня нет, да и для ознакомления с системой 2D вполне достаточно.&lt;/p&gt;

&lt;p&gt;Игру захотелось сделать в минималистичном стиле pixelart. В результате чего появилась идея «The One: Prototype».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/the_one_prototype.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, в сети не так много русскоязычной информации на тему Godot, поэтому пришлось штудировать уроки на англоязычном &lt;a href=&quot;https://www.youtube.com/watch?v=UWB-HVFxEpU&amp;amp;list=PLS9MbmO_ssyAXRl-_ktrebQBFxjSQt7UX&quot;&gt;youtube&lt;/a&gt;. Впрочем, если вы неплохо понимаете английский и тем более программируете, это быстро  поможет разобраться в предмете вопроса.&lt;/p&gt;

&lt;p&gt;Первая «бродилка» получилась достаточно быстро. Единственным неприятным моментом, стал встроенный редактор тайлов и собственно сам редактор карты. Плюс, по умолчанию, godot сглаживает загружаемую графику и весь мой pixelart, как говорится, «поплыл».  К счастью этот режим оказался отключаемым:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/224521288&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Как альтернативу встроенному редактору можно воспользоваться редактором «&lt;a href=&quot;http://www.mapeditor.org/&quot;&gt;Tiled&lt;/a&gt;», тем более что в godot есть плагины, которые позволяют импортировать и тайлы и собственно сами карты.&lt;/p&gt;

&lt;p&gt;Вторым пунктом в реализации задуманного стал вывод текстовых сообщений. С одной стороны, мне не хотелось бы повторения всего функционала RPG Maker, а с другой, какая игра не обходится без вывода текстовых сообщений? Так проект обзавёлся &lt;a href=&quot;https://vimeo.com/224637372&quot;&gt;своим модулем&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Чуть позже система была немного доработана, появилась возможность отображать аватарку как справа, так и слева. У сообщений появился звук имитирующий речь.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/224664631&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;После реализации сообщений, встал вопрос о том, что надо как реализовать взаимодействие с окружающими нас предметами. Мне захотелось немного расширить банальную систему «тыкнись — получи сообщение» как в RPG Maker.&lt;/p&gt;

&lt;p&gt;То, что &lt;a href=&quot;https://vimeo.com/224771248&quot;&gt;получилось в итоге&lt;/a&gt; уже более менее походило на систему в квестовых играх. По задумке, взаимодействовать с любым предметом можно четырьмя способами: говорить(спросить), ударить(пнуть), осмотреть и сделать(взаимодействие).&lt;/p&gt;

&lt;p&gt;Далее был добавлен ещё один компонент «eventbox», по аналогии с «event» в RPG Maker. У него так же появилось несколько «шагов», по которым можно двигаться, и проект стал вырисовываться уже в более-менее что-то интересное:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/224862187&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Следующим шагом стал компонент выбора варианта ответов. С одной стороны, мне хотелось чего-то оригинального, а с другой мне нравилась система в играх BioWare.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/mass_effect_select.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В результате чего была честно слямзена идея из &lt;a href=&quot;http://store.steampowered.com/app/17460/&quot;&gt;Mass Effect&lt;/a&gt; и адаптирована под pixelart стиль.&lt;/p&gt;

&lt;p&gt;Причём, что интересно, в модуле «select» можно задать количество отображаемых пунктов и оно будет выглядеть идентично натуральной игре Mass Effect:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/225305637&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;По задумке Лис, автора оригинальной «The One», приключения героини начинаются с загадки, а точнее с поиска шифра кодового замка. В шкафу спрятана одежда и его надо как-то открыть.&lt;/p&gt;

&lt;p&gt;Для реализации задуманного был создан ещё один компонент — кодовый замок.&lt;/p&gt;

&lt;p&gt;Цифры можно вводить, как управляя курсором в виде пальца, так и непосредственно нажимая кнопки на клавиатуре (в цифровой части).&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/225681952&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;На данном этапе разработки стала «проблемой» анимация, а точнее корявая её реализация.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/the_one_gg.png&quot; class=&quot;imgLeft&quot; /&gt; Как видно из видеороликов, в качестве гг использовался «чибик» с анимацией из RPG Maker MV. Кадров всего три, и достаточно выглядят грустно.&lt;/p&gt;

&lt;p&gt;И как оказалось, не просто подобрать временную задержку, что бы получилось более-менее вменяемое передвижение.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/player.png&quot; class=&quot;imgRight&quot; /&gt;Поэтому пришлось искать альтернативу. Взор упал на вариант слямзить кадры из RPG Maker XP.&lt;/p&gt;

&lt;p&gt;К сожалению реализация анимации в 4 кадра не сильно помогла. Там были всё же «чибики», хотя немного перерисовав персонажа, мне удалось добиться более-менее вменяемой внешности.&lt;/p&gt;

&lt;p&gt;Но тут встал другой вопрос, с анимацией ног во время перемещения вверх и вниз. Стало понятно, почему авторы RPG Maker склонялись к идее «чибиков». Рисовать при этом меньше, ног практически не видно и перемещение не выглядит столь корявым.&lt;/p&gt;

&lt;p&gt;На какое-то время всё «замёрзло», но тут мне попались кадры анимации для изометрической проекции.&lt;/p&gt;

&lt;p&gt;И как говорится «душа понеслась в рай», мне срочно захотелось попробовать вариант с изометрической проекцией:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/the_one_prototype_iso.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На практике оказалось не всё так радужно как хотелось. Как таковой реализации изометрии в godot нет. Есть возможность несколько сместить чередование столбцов тайлов, таким образом, чтобы получилось подобие изометрии.&lt;/p&gt;

&lt;p&gt;Попытка реализация изометрии сильно поумерила пыл, и интерес несколько угас. Спустя время была ещё одна попытка разобраться с изометрией. Правда уже несколько в другом проект, и на этот раз используя не карту тайлов, а картинку в виде подложки, просто отмечая непроходимые места:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-08/Godot the begining/loa_godot.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, на данный момент в силу жизненных вопросов изучение godot несколько приостановлено. Но я не отчаиваюсь и постараюсь всё-таки закончить начатое дело и поделится опытом создания на страницах блога.&lt;/p&gt;

&lt;p&gt;Ну а пока, если вам интересно, вы можете скачать проект «&lt;a href=&quot;https://github.com/murlab/the-one-prototype&quot;&gt;The One: prototype&lt;/a&gt;» для самостоятельного изучения модулей. Либо запустить &lt;a href=&quot;https://github.com/murlab/the-one-prototype/raw/master/releases/the_one_pro_alpha_1.exe&quot;&gt;демку&lt;/a&gt; и немного побегать по локациям лаборатории. Так же можно ещё глянуть самую первую мою попытку сделать что-нибудь на godot — &lt;a href=&quot;https://github.com/murlab/the-one-prototype/raw/master/releases/the_one_pro_title_test.exe&quot;&gt;титульное меню&lt;/a&gt; (:&lt;/p&gt;

&lt;p&gt;Сим не прощаюсь, ещё увидимся.&lt;/p&gt;

&lt;p&gt;ps. Проверено на VirusTotal — вирусов нет:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virustotal.com/#/file/91237b44e723b053b5ec8d0b4f304c418acd0ad1c70ef2a2c0cdd015a4cc890d/&quot;&gt;the_one_pro_alpha_1.exe&lt;/a&gt; ~16Mb&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virustotal.com/#/file/5167a0b2e29c89f764d6aa0ce0a0207cf202d3fb2b6dc7585047f64fc397bd2d&quot;&gt;the_one_pro_title_test.exe&lt;/a&gt; ~16Mb&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="godot engine" /><category term="lis" /><category term="the one" /><category term="pixelart" /><category term="the one prototype" /><category term="story" /><summary type="html">Где-то примерно в середине лета мне предложили изучить такую интересную штуку как «Godot Engine», тем более, что она доступна бесплатно и есть даже в Steam.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/Godot%20the%20begining/godot_title.png" /></entry><entry><title type="html">Let’s GO!!</title><link href="https://murlab.github.io/blog/Let's%20GO!!/" rel="alternate" type="text/html" title="Let's GO!!" /><published>2017-12-06T23:59:59+03:00</published><updated>2017-12-06T23:59:59+03:00</updated><id>https://murlab.github.io/blog/Let's%20GO!!</id><content type="html" xml:base="https://murlab.github.io/blog/Let's%20GO!!/">&lt;p&gt;Как говаривал не безызвестный Чебурашка, «Мы строили, строили и наконец построили ;)&lt;/p&gt;

&lt;p&gt;Блуждая по интернету, я периодически задумываюсь о том, что очень классно было бы где-нибудь наконец осесть, да и записать все свои мысли.&lt;/p&gt;

&lt;p&gt;И надо отдать должное у меня даже были некоторые попытки реализовать задуманное на практике.
Изначально это были записи в закрытом кругу google+, по большому счёту из-за того, что там больше размещались скриншоты и различные записи, как говорится «для своих». Это были самые тёплые, хотя и порой весьма «кусачие» отзывы, но конечно бесценно полезные.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Затем была попытка завести блог на различных «условно бесплатных» сервисах. Не буду утомлять вас перечислением того, что мне там не нравилось, скажу лишь, что основная проблема — это дизайн, а точнее отсутствие возможности оформить сайт как того хочется.&lt;/p&gt;

&lt;p&gt;Но были и положительные моменты. Например, на сайте wordpress до сих пор появляются свежие комментарии с благодарностями, следовательно, материал востребован, и я двигаюсь в нужном направлении.
И вот в одном из комментариев, мне подсказали идею, которая вылилась в размещении всего этого безобразия на &lt;a href=&quot;https://pages.github.com&quot;&gt;pages.github.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-06/Let's GO!!/professortocat.png&quot; class=&quot;imgLeft&quot; /&gt;Чем же меня так заинтересовал именно этот сайт?&lt;/p&gt;

&lt;p&gt;Ну само собой понятно, что он бесплатный, причём что важно без приставки «условно», он правда бесплатный. То есть на сайте нет ни встраиваемой рекламы, ни жучков, ни какой-либо другой гадости. Потому что на сайте вы размещаете чисто странички html. Как вы их создали у себя на компьютере, так они и будут выглядеть.
Возможно, многие выскажут своё «Фе!», но положа руку на сердце, скажите, а оправдано ли, что при каждом обращении на сайт страница создаётся заново? Так ли это прямо необходимо? Если это какой-нибудь форум, чат или сайт с динамической информацией, как например сервис по состоянию серверов «&lt;a href=&quot;https://steamstat.us/&quot;&gt;Steam Status&lt;/a&gt;», возможно. Но если это нечасто обновляемый ресурс, то думаю, что такой уж острой необходимости в этом нет. А вот скорость загрузки таких страничек намного выше. «Но позвольте, а как же блог или магазин, я что буду каждую страничку создавать вручную?» А вот тут на помощь приходит такая крутая штука, как &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Её написали те же ребята, что и создали &lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-06/Let's GO!!/jekyll_logo.png&quot; class=&quot;imgRight&quot; /&gt;Jekyll это целый «комбайн», который является локальным сервером для тестирования. Он позволяет по шаблонам автоматически создавать новые страницы, вставлять внутрь шаблонов другие кусочки. Так же он поддерживает язык шаблонов &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/liquid-for-designers&quot;&gt;Liquid&lt;/a&gt;, что раскрывает поистине широкие возможности для создания страниц.
Сам Jekyll написан на Ruby. Если вам недостаточно возможностей Liquid, то можно создать свои плагины и генерировать вообще что душе угодно, ну конечно в пределах разумного ;)
Если будет интересно, я могу рассказать более подробно об этой системе, те более, что мне удалось даже написать парочку своих плагинов.&lt;/p&gt;

&lt;p&gt;К слову, чем меня так ещё не утраивала возможность создавать свой дизайн, так это отсутствием возможности по-человечески оформить примеры кода. Сейчас с этим полный порядок, во многом благодаря, такой классной штуке как &lt;a href=&quot;https://highlightjs.org/&quot;&gt;highlightjs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Например, так выглядит код на javascript:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// Пример комментария 1
function init() {
  navbar = document.getElementById(&quot;navbar&quot;);
  sticky = navbar.offsetTop;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;А вот так выглядит код на ruby:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;module Jekyll
  # this class is used to tell Jekyll to generate a page
  class DataPage &amp;lt; Page
    def initialize(site, base, index_files, dir, data, name, template, extension)
      @site = site
      @base = base
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Но вернёмся к github. Чистый html хорош ещё тем, что можно размещать web-версию проекта того же RPG Maker или любого другого конструктора и показывать работоспособность online. Раньше для этих целей приходилось городить целый огород, например, с тем же google disk. Но начиная с 2015 года, google прекратил предоставлять доступ и в любом случае пришлось бы искать что-то другое.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-06/Let's GO!!/github_desktop.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Так же немаловажной причиной выбора &lt;a href=&quot;https://pages.github.com&quot;&gt;pages.github.com&lt;/a&gt;, стала интеграция его с сервисом контроля версий &lt;a href=&quot;https://github.io/&quot;&gt;github.io&lt;/a&gt;. Конечно, у людей далёких от программирования, могут возникнуть сложности. Однако всё не так страшно, как может показаться на первый взгляд. Существует очень удобная понятная программа &lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt; и при случае я постараюсь рассказать более подробно как ей пользоваться, как зарегистрироваться на сервисе и соответственно завести свою страничку.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-06/Let's GO!!/saritocat.png&quot; class=&quot;imgLeft&quot; /&gt;Ну в завершении этой небольшой вводной заметки, собственно для чего это всё, и что ожидать тут в будущем?
Вообще изначально у меня была задумка просто создать игрушку с помощью RPG Maker. Затем аппетиты быстро начали расти, захотелось и того и сего, и всего побольше. Конечно для того же &lt;a href=&quot;http://www.rpgmakerweb.com/products/programs/rpg-maker-vx-ace&quot;&gt;RPG Maker VX Ace&lt;/a&gt; было написано не мало скриптов, которые позволяли реализовать задуманное, но часто случались ситуации, когда скрипты конфликтовали, когда что-то хотелось сделать немного по-другому или просто дополнить.&lt;/p&gt;

&lt;p&gt;Так пришло осознание в необходимости самостоятельно разбираться в скриптах. В VX Ace они были написаны на Ruby. Честно скажу, не самый простой язык для знакомства с программированием. Было не просто, очень много чего не понятно, и чисто на упорстве и с помощью знакомых, удалось немного сдвинуться с мёртвой точки. Как пример моих многозначительных страданий первый и последний плагин «Ace Shop Options Add-on - Items States». Конечно были ещё всякие мелкие доделки, исправления итд. Возможно я о них ещё тоже расскажу.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-06/Let's GO!!/yakuza.png&quot; class=&quot;imgRight&quot; /&gt;С появлением &lt;a href=&quot;http://www.rpgmakerweb.com/products/programs/rpg-maker-mv&quot;&gt;RPG Maker MV&lt;/a&gt;, появилась необходимость разбираться уже с JavaScript. JS в отличии от того же Ruby мне показался более дружелюбным, интуитивно понятным по синтаксису. С ним у нас можно сказать прямо любовь (: Написано не мало различных плагинов, о которых я конечно же ещё расскажу.&lt;/p&gt;

&lt;p&gt;Немногим позже мне понадобилось разобраться в одном скрипте на Python &amp;gt;_&amp;lt;’ так открылась ещё одна грань в моём изучении чего-то нового, непонятного, но ужасно интересного. В будущем мне это сильно пригодилось при изучении Godot, ведь его скрипты очень схожи по синтаксису с Python.&lt;/p&gt;

&lt;p&gt;О &lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot&lt;/a&gt; можно рассказывать много и бесконечно. Это как катаясь по кругу на пони, вдруг вырваться и носиться по полю. Да он не прост, и новичкам будет многое сложно и не понятно, но после RPG Maker, это действительно свобода действий. Осталось только понять, а чего собственно я хочу? (:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017-12-06/Let's GO!!/kot_obormot.png&quot; class=&quot;imgLeft&quot; /&gt;Ну вот собственно и всё. Ах да, иногда на меня находит вдохновение, и я рисую. Собственно, это тоже будет по возможности пролетать тут, ну по крайней мере я на это надеюсь.&lt;/p&gt;

&lt;p&gt;Пару заметок по сайту. На панельку (ввверху) вытащены «основные» ссылки, на мой взгляд, на важные разделы. Записи в этих разделах будут отображаться и в основной ленте блога, просто они туда вынесены для быстрого доступа. Например, если выбрать «графика», то будут отфильтрованы посты на тему моих картинок, если «rpg maker», то всё что связано с ним итд.&lt;/p&gt;

&lt;p&gt;Слева есть ещё выпадающее меню [≡], в котором так же продублированы основные фильтры, а также некоторые другие пункты. Например, раздел «Архив», куда я утяну старые свои записи, не будет отображаться в основной ленте блога.&lt;/p&gt;

&lt;p&gt;Так же в нём есть ссылка на раздел с материалами для скачивания. Есть ещё раздел тегов, и список материалов с этими метками. Ну и конечно куда же современному сайту без RSS-ленты, конечно же не без помощи Jekyll. В общем много чего ещё интересного. Подписывайтесь и оставляйте отзывы.&lt;/p&gt;

&lt;p&gt;Не прощаюсь, ещё увидимся.&lt;/p&gt;</content><author><name></name></author><category term="web" /><category term="blog" /><summary type="html">Как говаривал не безызвестный Чебурашка, «Мы строили, строили и наконец построили ;)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/Let's%20GO!!/github_logo.png" /></entry><entry><title type="html">Запускаем проект в браузере</title><link href="https://murlab.github.io/blog/Zapuskaem%20proekt%20v%20brauzere/" rel="alternate" type="text/html" title="Запускаем проект в браузере" /><published>2015-11-06T01:00:00+03:00</published><updated>2015-11-06T01:00:00+03:00</updated><id>https://murlab.github.io/blog/Zapuskaem%20proekt%20v%20brauzere</id><content type="html" xml:base="https://murlab.github.io/blog/Zapuskaem%20proekt%20v%20brauzere/">&lt;p&gt;&lt;strong&gt;Обновление от 2 февраля 2017 года&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;warning&quot;&gt;&lt;i class=&quot;fa fa-exclamation-triangle&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;
Спешу вам сообщить, что, начиная с 31 августа 2015 года поддержка доступа к google disk как web-сервису (описанного в данной статье) более не доступна.&lt;/div&gt;

&lt;p&gt;«&lt;em&gt;Beginning August 31, 2015, web hosting in Google Drive for users and developers will be deprecated. Google Apps customers can continue to use this feature for a period of one year until August 31, 2016, when serving content via googledrive.com/host/doc id will be discontinued.&lt;/em&gt;»&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;Сегодняшний мини-урок мне бы хотелось посвятить запуску нашей игры, созданной с помощью RPG Maker MV в браузере.&lt;/p&gt;

&lt;p&gt;Для чего это может понадобится? Ну помимо того, что вы можете просто показать друзьям, можно, например, сделать демоверсию и разместить у себя на сайте для привлечения внимания. Возможно вы захотите разместить игру во «ВКонтакте». Но самое интересное, если у вас есть команда поддержки (бетатестеры) они оперативно могут видеть новые версии, играть и сообщать о всех найденных ошибках и недочётах.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Но как нам это сделать? Ведь в документации RPG Maker MV говорится о сложных манипуляциях с установкой и запуском локального сервера, или же для размещения в сети, потребуется свой. На самом деле не всё так страшно как кажется на первый взгляд, и ничего ставить не придётся. Собственно, об этом мне бы и хотелось сегодня поговорить.&lt;/p&gt;

&lt;p&gt;Не так давно, один знакомый поделился ссылкой на интересную статью, о том, как разместить свою игру на HTML5 во «Вконтакте». Прочитав её, мне пришла мысль, а применимо ли это к нашему проекту? И как вы уже догадались у меня всё получилось, с чем я и спешу поделится с вами.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/2.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как вы уже, наверное, заметили, проект для RMMV представляет собой кучу различных файлов в текстовом виде. Не буду углубляться в подробности, но нас интересует главный файл index.html Но если мы попытаемся его открыть в браузере, то получим сообщение об ошибке.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/3.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, библиотеки RPG Maker MV написаны таким образом, что не могут работать локально, так что же делать? Умные люди уже всё придумали за нас и нам на помощь спешит,… нет не мистер Пропер :) а гугл драйв.&lt;/p&gt;

&lt;p&gt;Если вы ещё не зарегистрированы в таких сервисах гугл, gmail или youtube настоятельно рекомендую это сделать, а всем остальным перейти непосредственно к настройкам в &lt;a href=&quot;https://drive.google.com/&quot;&gt;google drive&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Для того что бы наш проект был доступен всем в интернете нам необходимо создать папку и выставить к ней доступ.&lt;/p&gt;

&lt;p&gt;Создадим папку «www». В принципе вы можете назвать её как угодно, на дальнейших настройках это никак не скажется. Выбираем папку нажимаем пиктограмму:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/4.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/5.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В открывшемся окошке мы видим строчку, от которой нам понадобится подчёркнутая часть из букв и цифр, поэтому её лучше куда-нибудь скопировать, а пока открываем настройки дальше, нажав «расширенные»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/6.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Здесь мы видим всю туже строку, но напротив «Документ доступен для…» нажимаем «Изменить»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/7.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;И теперь уже точно выбираем, что —наш документ— наша папка будет доступна всем в интернете. Это очень важный момент, если где-то ошибиться и неправильно настроить доступ мы получим ошибки или вообще просто чёрный экран без каких-либо сообщений. Сохраняем и приступаем к подготовке нашего проекта для загрузки.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/8.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как видно из скриншота, наш тестовый проект (даже «пустой») изначально очень большой. Достаточно много файлов и папок. Конечно если у вас хороший и быстрый интернет и не сильно тревожит свободное место на гугл драйв, то последующие шаги вы можете смело пропустить. Но тем не менее, я предлагаю проект немного предварительно «почистить».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/9.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для этого скопируем нашу папку с проектом в отдельное место и откроем папку audio. В ней мы увидим ещё несколько папок: bgm, bgs, me и se. Зайдя в каждую мы увидим файлы звуков и музыки в двух форматах. Один из них это OGG, который используется в Windows, а также в web, а другой формат m4a. Файлы в формате m4a используются в компьютерах Apple, а также в iPhone. Поскольку наш проект будет только для интернета, то файлы звуков m4a мы смело удаляем.&lt;/p&gt;

&lt;p&gt;В принципе, если вы не планируете выпускать игру для компьютеров Apple вы можете их удалить и из основного проекта. В любом случае они останутся в папке RPG Maker MV(&lt;strong&gt;*Steam\steamapps\common\RPG Maker MV\NewData*&lt;/strong&gt;), на основе которой создаются все новые проекты. Так же можно удалить файл «Game.rpgproject», который находится рядом с «index.html». Он используется для открытия проекта в самом редакторе RPG Maker. &lt;strong&gt;Не удаляйте его, если вы не делали копию данного проекта!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Если вы так уж сильно придирчиво относитесь к размеру и понимаете, что делаете, то можете смело удалить не используемые звуки и в формате OGG, а также некоторую графику из папки img. Но мы этого делать не будем и посмотрим на результат:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/10.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Хоть и незначительно, но проект стал поменьше и настало время загрузить наши файлы в Google Drive. Для этого заходим в нашу папку www в гугл драйв и закачиваем проект.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/11.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Если у вас браузер Google Chrome, то вы можете просто перетянуть все папки и файлы прямо из проводника. Если же нет, тогда можно либо перетягивать всё по одному файлу, либо установить программу для синхронизации Google Drive, а можно запаковать все файлы в архив и уже распаковать на сайте Google Drive с помощью сторонних сервисов, например, «CloudConvert»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/12.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;После того, как все наши файлы будут закачаны или распакованы из архива, у нас должна получится вот такая картина:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/13.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь настало время вспомнить про строчку, о которой говорилось в начале.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-06/Zapuskaem proekt v brauzere/14.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для того, чтобы наша папка открылась как страничка, нужно взять и дописать после https:// путь к googledrive.com/host/ а затем уже наш буквенно-цифровой код. Полученный адрес и будет ссылаться на наш проект с игрой.&lt;/p&gt;

&lt;p&gt;https://googledrive.com/host/0B-q89LL1IWimeDZoZnlUV0lkRDQ&lt;/p&gt;

&lt;p&gt;Если вы сделали всё правильно, то через несколько секунд ваша игра должна загрузиться. Если же что-то пошло не так, попробуйте ещё раз пройтись по всем этапам: доступ к файлам, правильность расположения файлов и собственно наличие всех необходимых файлов проекта на своих местах.&lt;/p&gt;

&lt;p&gt;Ссылкой можно поделится с друзьями или разместить игру во «ВКонтакте». Как это сделать можно узнать уже из инструкции в оригинальной статье (ссылка чуть ниже).&lt;/p&gt;

&lt;p&gt;И да, вот ещё что. У вас, наверное, может возникнуть вопрос «не противоречит ли условиям использования Google Drive размещение контента с такой целью»? Спешу вас обрадовать, оказывается нет:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Skaner:
Гугл положительно относится к такой возможности, более того, даже у них самих есть инструкция по запуску html файлов в общем доступе. ---Вырезка из технической поддержки---.

Единственное, что, если ваша игра/приложение будет иметь большую популярность, и, как следствие — требовать больших мощностей из-за обилия запросов, лучше обзавестись собственным сервером с SSL.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;На этом разрешите откланяться и пожелать удачи в ваших проектах! =^‿~=&lt;/p&gt;</content><author><name></name></author><category term="archive" /><category term="rpg maker mv" /><category term="story" /><category term="уроки" /><summary type="html">Обновление от 2 февраля 2017 года:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/Zapuskaem%20proekt%20v%20brauzere/browser_title.png" /></entry><entry><title type="html">Пишем плагин для отображения больших аватарок</title><link href="https://murlab.github.io/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/" rel="alternate" type="text/html" title="Пишем плагин для отображения больших аватарок" /><published>2015-11-05T02:00:00+03:00</published><updated>2015-11-05T02:00:00+03:00</updated><id>https://murlab.github.io/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok</id><content type="html" xml:base="https://murlab.github.io/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/">&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;С вами опять я, и мои очумелые ручки вновь не дают мне покоя. Ну и собственно по этой причине я спешу поделиться с вами своим новыми изысканиями.&lt;/p&gt;

&lt;p&gt;Изыскивать мы сегодня будем как с помощью нескольких изменений, вывести на экран большие аватарки. На подобии «&lt;a href=&quot;https://galvs-scripts.com/2012/12/01/message-busts/&quot;&gt;Message busts&lt;/a&gt;» от &lt;a href=&quot;https://galvs-scripts.com/&quot;&gt;Galv&lt;/a&gt;. Стой лишь разницей, что у него скрипт написан для VX Ace, ну а мы соответственно будем изыскивать для RPG Maker MV.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Для начала общая идея, как я себе это представляю:
В обычном редакторе текстовых диалогов, мы выбираем файл с группой аватаров, выбираем один из них и задаём текст сообщения. Всё как обычно.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem plagin dla otobrazhenia bolshih avatarok/4.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Затем, находим место где выводится на экран аватарка. Изменяем скрипт на то что нам нужно, а именно выбрать картинку из папки img\bigfaces\ загрузить её вместо стандартной и вуаля, всё готово. На практике оказалось не всё так просто. Дело в том, что размеры окна (в данном случае с текстом сообщения) жестко задают границы и если попробовать загрузить другую (большую) картинку, то всё что попадает за пределы окна попросту обрезается.&lt;/p&gt;

&lt;p&gt;Довольно неожиданно, но мысль не давала мне покоя. Ну хорошо, а что, если нам сделать новое своё окошко, убрать к примеру все декорации, и загрузить в него нашу большую картинку. Отличная идея, как мне тогда казалось, но не совсем,… Да, новое большое окно у меня получилось вывести, но тут меня ждало разочарование. Дело в том, что как только новое окно перекрыло часть окна с сообщением, всё что находилось под ним попросту исчезло.&lt;/p&gt;

&lt;p&gt;Мдяя,… как говорится, а праздник был близко. Ну что ж, мы не отчаиваемся и самое время перестать маяться дурью и наконец посмотреть, а как же эту проблему решает Galv в своём скрипте? Всё оказалось просто. Скрипт, который выводит обычную аватарку убирается, а вместо него с помощью Sprite спокойно отображается картинка поверх всех окошек. Алллилуйя! Вот оно!&lt;/p&gt;

&lt;p&gt;Итак, идея ясна, осталось только всё сделать.&lt;/p&gt;

&lt;p&gt;Начнём мы, как и в прошлый раз с описания нашего скрипта. На деталях я останавливаться уже не стану, скажу только, что нам понадобится одна переменная в настройках, а именно сколько отступить тексту с левого края. Картинки у нас большие и если оставить настройки по умолчанию, то текст будет накладываться поверх персонажа, что не всегда хорошо читается. Впрочем, кто-то может в этом узреть особенность дизайна.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem plagin dla otobrazhenia bolshih avatarok/1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Начало нашего скрипта:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// BigAvatar.js
//=============================================================================

/*:
* @plugindesc показывает большую аватарку
* @author Mur
*
* @param avatarWidth
* @desc padding for text
* @default 320
*
*/

(function() {

var parameters = PluginManager.parameters(‘BigAvatar’);
var avatarWidth = Number(parameters[‘avatarWidth’]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Прочитаем в переменную avatarWidth ширину нашей большой картинки, или точнее сколько нам отступать.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var spr = new Sprite();
var bitmap;
var sprPosX;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее подготовим несколько переменных: &lt;strong&gt;&lt;em&gt;spr&lt;/em&gt;&lt;/strong&gt; это собственно наш спрайт с которым мы будем работать дальше; &lt;strong&gt;&lt;em&gt;bitmap&lt;/em&gt;&lt;/strong&gt; — сюда мы будем загружать нашу большую картинку и затем копировать в спрайт; &lt;strong&gt;&lt;em&gt;sprPosX&lt;/em&gt;&lt;/strong&gt; — это положение нашего спрайта на экране. Забегая немного вперёд скажу, что мне захотелось не просто вывести картинку на экран — БАМЦ! а что бы она плавно выезжала из-за края экрана. Но обо всём по порядку.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Message.prototype.newLineX = function() {
	return $gameMessage.faceName() === '' ? 0 : avatarWidth;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь мы указываем наш отступ для текста, если аватар не указан, то отступ равен 0. В противном случает отступ для текста устанавливается из нашей переменной &lt;strong&gt;&lt;em&gt;avatarWidth&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Base.prototype.drawFace = function(faceName, faceIndex, x, y, width, height) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее собственно то место, где рисуется аватарка персонажа, который говорит наш текст.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;if (faceName != '') {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Проверяем, а задано ли название аватара, который нам нужно отобразить. Уж не знаю или моя ошибка, или где-то кто-то что-то пропустил, но мы сюда иногда попадаем с пустым именем. В результате чего ошибка на экране и «поезд дальше никуда уже не идёт».&lt;/p&gt;

&lt;p&gt;Если имя не задано, то просто ничего не делаем.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;if (spr.bitmap) {
	this.removeChild(spr);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Вот тут очень важный и интересный момент. Если у нас уже была загружена картинка (мы сюда попали не первый раз), то нужно убрать старый спрайт с экрана. Поскольку если этого не сделать на экране будет каша, все наши картинки начнут накладываться одна на другую.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;bitmap = ImageManager.loadBitmap('img/bigfaces/' + faceName + '/', faceIndex+1, null, true);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее мы загружаем картинку. ‘img/bigfaces/’ — место где лежат наши большие аватарки. &lt;strong&gt;&lt;em&gt;faceName&lt;/em&gt;&lt;/strong&gt; это название файла с 8ю маленькими аватарками, который мы использовали при составлении текста. Но в данном случае это будет ещё одна папка, где будут лежать наши 8 больших картинок с номерами от 1 до 8. &lt;strong&gt;&lt;em&gt;faceIndex+1&lt;/em&gt;&lt;/strong&gt; это собственно уже название нашей картинки которую мы хотим загрузить. +1 потому что счёт у них не с 1, а 0. и «.png» не нужно добавлять, так как система сама это сделает за нас.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem plagin dla otobrazhenia bolshih avatarok/5.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как видно из рисунка, «Тест» название нашего проекта «img\bigfaces» это где хранятся наши картинки «Package1» одноимённое название файла с аватарами и дальше собственно от 1 до 8 картинки.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var face = this;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Об этом чуть ниже.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;bitmap.addLoadListener(function() {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее очень важный момент. Поскольку картинка не может загрузится мгновенно, нам нужно написать специальную нашу функцию, которая будет вызвана после того, как картинка будет загружена. Если этого не сделать на экране мы в лучшем случае не получим ничего, а в худшем случае ошибку.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;spr.bitmap = new Bitmap(bitmap.width, bitmap.height);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;После того, как картинка загружена, нам нужно её скопировать в спрайт. Для этого создадим пустую картинку в спрайте точно такими же размерами, как у вновь загруженной картинки.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;spr.bitmap.blt(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Затем копируем загруженную картинку &lt;strong&gt;&lt;em&gt;bitmap&lt;/em&gt;&lt;/strong&gt; в спрайт &lt;strong&gt;&lt;em&gt;spr&lt;/em&gt;&lt;/strong&gt;. Первые два числа (0,0) это координаты в нашей картинке, например, если мы хотим скопировать не всю, а только часть. Далее два числа (&lt;strong&gt;&lt;em&gt;bitmap.width&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;bitmap.height&lt;/em&gt;&lt;/strong&gt;) это собственно размер нашей копируемой картинки. Ну и последние два нуля это место куда мы хотим вставить нашу картинку в спрайт.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;sprPosX = -(bitmap.width);
spr.x = sprPosX;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь мы указываем начальную координату &lt;strong&gt;&lt;em&gt;X&lt;/em&gt;&lt;/strong&gt; для нашего спрайта. Как уже сказано выше, у меня есть задумка сделать так, чтобы спрайт появлялся не сразу на экране, а выезжал из-за границы экрана. Поэтому тут отрицательное число равное ширине нашей загруженной картинки.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;spr.y = -(bitmap.height - face.height);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В этом месте задаётся вертикальное положение на экране, координата &lt;strong&gt;&lt;em&gt;Y&lt;/em&gt;&lt;/strong&gt;. Координата 0, как может показаться это не верхний левый угол экрана, а координата относительно нашего окна с текстом. Поэтому для того, чтобы «выскочить» за его границы нам так же нужно задать отрицательное число. Для этого берём высоту нашей картинки, уменьшаем её на высоту обычной аватарки и зададим координату Y.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;face.addChildToBack(spr);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ну и теперь главный момент. Собственно, надо «прикрепить» наш спрайт к окну с сообщением. Возможно есть способ лучше, и EvilCat меня поправит, но ничего лучше мне не пришло в голову. По идеи здесь должно быть написано было &lt;strong&gt;&lt;em&gt;this.addChildToBack&lt;/em&gt;&lt;/strong&gt;, но поскольку &lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt; у нас внутри нашей функции уже указывает на &lt;strong&gt;&lt;em&gt;bitmap&lt;/em&gt;&lt;/strong&gt;, то мы получим ошибку. Поэтому тут как бы такая вот странная конструкция, мы сохраняем в &lt;strong&gt;&lt;em&gt;face&lt;/em&gt;&lt;/strong&gt; наш старый &lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt; на окошко, а затем просим систему добавить к нему спрайт.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;}.bind(bitmap));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Заканчивается загрузка картинки такой вот странной конструкцией. С радостью послушаю EvilCat для чего оно нужно, но скажу одно этот момент у меня очень много крови попил и заставил вчера просидеть аж почти до 4х утра. Пока не попался другой пример, с таким вот «хвостом». Уже отчаявшись, копирую этот кусочек и о чудо! Загрузка картинок заработала, иначе получались пустые файлы.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;    }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Закрываем нашу проверку пустого имени и собственно всей функции.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var _Window_Base_close = Window_Base.prototype.close;
Window_Base.prototype.close = function() {
	_Window_Base_close.call(this);
	this.removeChild(spr);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Этот кусочек не менее важен чем другие и отнял у меня тоже достаточно много времени. Дело в том, что, когда мы загружаем картинки постепенно по мере открытия новых диалогов, всё красиво и прекрасно. Но если обратится к НПЦ ещё раз, на доли секунды на экране появляется старая (последняя) картинка, прежде чем успевает загрузится новая. Это не очень красиво, и логично было бы удалять наш спрайт с экрана, после закрытия окна с текстом.&lt;/p&gt;

&lt;p&gt;Думаю, комментарии тут излишни. Так же как и в первом уроке мы «дублируем» основную функцию системы &lt;strong&gt;&lt;em&gt;Window_Base.prototype.close&lt;/em&gt;&lt;/strong&gt; и добавляем после всех основных команд системы, команду удалить наш спрайт с экрана &lt;strong&gt;&lt;em&gt;this.removeChild(spr)&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var _Window_Base_update = Window_Base.prototype.update;
Window_Base.prototype.update = function() {
	_Window_Base_update.call(this);
	if (sprPosX &amp;lt;0) {
		sprPosX += 5;
		spr.x = sprPosX;
	}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ну и осталась ещё одна функция, которая будет двигать наш спрайт из-за экрана до тех пор, пока координата &lt;strong&gt;&lt;em&gt;X&lt;/em&gt;&lt;/strong&gt; не будет равна 0.&lt;/p&gt;

&lt;p&gt;Так же как и с предыдущей функцией, мы делаем «дубликат» системной функции &lt;strong&gt;&lt;em&gt;Window_Base.prototype.update&lt;/em&gt;&lt;/strong&gt;. После того как отработает система, мы проверяем координату &lt;strong&gt;&lt;em&gt;X&lt;/em&gt;&lt;/strong&gt; нашего спрайта, и если она меньше 0, то увеличиваем её на 5 точек. Никаких дополнительных действий для загрузки изображения не требуется, достаточно обновить координату спрайта &lt;strong&gt;&lt;em&gt;spr.x&lt;/em&gt;&lt;/strong&gt; и оно сместиться на новое место автоматически.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;На этом всё, закрываем основную функцию нашего плагина и отправляемся тестировать.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem plagin dla otobrazhenia bolshih avatarok/3.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Стоит обратить внимание, что получившийся у нас плагин это всего лишь маленькая не законченная часть. Вывод аватара используется в совершенно неожиданных местах. И если, например, при отображении результатов битвы или списка персонажей в меню, это ещё не так фатально выглядит:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem plagin dla otobrazhenia bolshih avatarok/6.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;то при выборе, например, экипировки:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem plagin dla otobrazhenia bolshih avatarok/7.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;уже выглядит не столь оптимистично.&lt;/p&gt;

&lt;p&gt;Понятно, что все эти нюансы ещё стоит учесть. Но минимальную задачу мы на сегодня выполнили. Разобрались как устроен вывод аватарок. Как загрузить свою картинку в спрайт и вывести на экран. И собственно, как сделать минимальную анимацию (выезд картинки из-за края экрана).&lt;/p&gt;

&lt;p&gt;На этом всё. Всем спасибо за внимание и до новых встреч. В следующий раз думаю мы ещё что-нибудь интересное расковыряем ;)  Удачи!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Небольшое обновление&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;

&lt;p&gt;Для того, чтобы большие аватарки показывались только в сообщениях, собственно и нужно «трогать» только функцию сообщений, а не вообще всех аватарок.&lt;/p&gt;

&lt;p&gt;Поэтому вместо кусочка:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Base.prototype.drawFace = function(faceName, faceIndex, x, y, width, height) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Перед &lt;strong&gt;&lt;em&gt;«if (faceName != ») {»&lt;/em&gt;&lt;/strong&gt; надо написать:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Message.prototype.drawMessageFace = function() {
var faceName = $gameMessage.faceName();
var faceIndex = $gameMessage.faceIndex();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Вот теперь будут заменяться аватарки только в сообщениях.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Ссылки по теме&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Свежая версия скрипта &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/BigAvatar.js&quot;&gt;BigAvatar.js&lt;/a&gt; всегда доступна на github в разделе &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/&quot;&gt;примеров&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="archive" /><category term="rpg maker mv" /><category term="plugins" /><category term="story" /><category term="уроки" /><summary type="html">Всем привет!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/avatars_title.png" /></entry><entry><title type="html">Пишем свой первый плагин для RPG Maker MV</title><link href="https://murlab.github.io/blog/Pishem%20svoj%20pervyj%20plagin%20dla%20RPG%20Maker%20MV/" rel="alternate" type="text/html" title="Пишем свой первый плагин для RPG Maker MV" /><published>2015-11-05T01:00:00+03:00</published><updated>2015-11-05T01:00:00+03:00</updated><id>https://murlab.github.io/blog/Pishem%20svoj%20pervyj%20plagin</id><content type="html" xml:base="https://murlab.github.io/blog/Pishem%20svoj%20pervyj%20plagin%20dla%20RPG%20Maker%20MV/">&lt;p&gt;Всем доброй ночи.&lt;/p&gt;

&lt;p&gt;Изначально урок писался для &lt;a href=&quot;http://rpgmaker.ru/forum/fakultet-skriptov/60680-rmmv-pishem-svoj-pervyj-plagin/&quot;&gt;светлой&lt;/a&gt;, но теперь думаю буду публиковать новые уроки сначала здесь.&lt;/p&gt;

&lt;p&gt;Сегодня мой день был потрачен не зря, ибо мне удалось написать свой первый небольшой плагин для нового RPG Maker MV. Сразу скажу, что ни разу не профессионал, занимаюсь в свободное от кухни время и только-только разбираюсь во всём это безобразии&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Хотя есть некоторый опыт скриптоковыряния VX Ace, что конечно же мне помог и тут. В любом случае спешу поделится своими изысканиями и надеюсь они будут ещё полезны кому-нибудь.&lt;/p&gt;

&lt;p&gt;Начать мне хотелось бы с редактора. Как вы уже, наверное, заметили, в отличии от VX Ace в MV своего редактора нет. Скрипты лежат в открытом виде и можете спокойно их редактировать в любом текстовом редакторе. В одном из видеоуроков человек порекомендовал brackets. Опыта у меня не много в подобного рода редакторах, но мне понравился. Особенно очень удобно, когда начинаешь что-то писать, а тебе бац и сразу подсказки. Мелочь, а приятно. При желании можно выбрать удобную цветовую тему. Так что можете тоже попробовать &lt;a href=&quot;http://brackets.io/&quot;&gt;совершенно бесплатно&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem svoj pervyj plagin dla RPG Maker MV/brackets.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для начала о том, что мы будем сегодня делать. Этот простой плагин рисует на экране небольшое окошко с иконкой и цифрой. Данные берутся из переменных (Variables) RPG Maker. А с помощью ключа (switch) можно включить или спрятать отображение данного окна. Теперь для чего? Например, NPC даёт герою задание, что нужно собрать 20 шишек. Понятно, что задание не сильно увеселительное, но можно игроку немного скрасить жизнь. Отображая, например, цифрами, сколько ему ещё осталось мучится. Выглядит это примерно так:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem svoj pervyj plagin dla RPG Maker MV/screenshot_01.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для того, чтобы пользователь мог выбрать произвольные ячейки (Variables) и ключ (Switch) для отображения, мы выведем эти параметры в настройки нашего плагина. В принципе можно вынести и размер окна, и его положение на экране, но мне бы пока не хотелось так всё сразу запутывать.&lt;/p&gt;

&lt;p&gt;Итак, создадим новый файл ItemOnMap.js в папке нашего проекта, а именно js\plugins. Этого уже достаточно, чтобы он уже появился в списке доступных плагинов, однако всё же стоит добавить его описание:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// ItemOnMap.js
//=============================================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь название нашего файла. Не могу сказать, что это нужно наверняка, но во всех плагинах под MV примерно такое-же оформление. Возможно система поэтому определяет, что это именно наш плагин, а ни чей-нибудь ещё.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Открываем комментарий и описываем различные параметры:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;* @plugindesc отображает на экране количество предметов в ячейке
* @author Mur
*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее указывается описание плагина (@plugindesc) и собственно кто автор (@author)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;* @param enableSwitchId
* @desc показать/скрыть (номер ключа)
* @default 1
*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Затем следуют перечисления параметров нашего плагина. Тут надо быть очень внимательными, ибо эти название затем используются в скрипте. И если что-то напутать, ничего не получится. Один параметр состоит из трёх частей, собственно его названия @param (на английском языке и честно не знаю, можно ли писать на русском), описание данного параметра @desc (не знаю почему, но описание на русском не отображается) и значение по умолчанию @default. Данный параметр указывает какой ключ (switch) будет разрешать или запрещать отображение данного окошка.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;* @param itemVarId
* @desc Иконка предмета (номер переменной)
* @default 1
*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь указывает номер переменной (Variable) в которой хранится номер предмета, который должен собирать наш главный герой. Иконка этого предмета и отображается в нашем окошке.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;* @param countVarId
* @desc Количество предметов (номер переменной)
* @default 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ну и завершает это всё последний параметр, который так же указывает на номер переменной (Variable) в которой хранится количество собранных предметов.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;*/&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Закрываем комментарий и далее следует уже наш скрипт самого плагина.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(function() {&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Такой строчкой начинаются почти все плагины, которая собственно и сообщает системе, что сейчас мы будет творить!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var parameters = PluginManager.parameters('ItemOnMap');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для начала нам нужно добраться до настроек нашего плагина. Не знаю, как это всё связано, но обратите внимание, что наш файл, первый кусочек и здесь название плагина везде одинаковое, в данном случае это «ItemOnMap».&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var enableSwitchId = Number(parameters['enableSwitchId']);
var itemVarId = Number(parameters['itemVarId']);
var countVarId = Number(parameters['countVarId']);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь мы получаем значение наших параметров. Честно не знаю, зачем тут написано Number, но в других скриптах сделано так же, так что видимо так надо.&lt;/p&gt;

&lt;p&gt;А так это выглядит, когда мы подключаем наш плагин:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem svoj pervyj plagin dla RPG Maker MV/params.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//Обновление всех окон
var _Scene_Map_createAllWindows = Scene_Map.prototype.createAllWindows;
Scene_Map.prototype.createAllWindows = function() {
	_Scene_Map_createAllWindows.call(this);
	this._itemOnMap = new ItemOnMap(10,10, 120, 60);
	this.addWindow(this._itemOnMap);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Вот тут очень важный и сложный момент. Для того, чтобы наше окно постоянно отображалось. Нам нужно втиснутся в основную функцию создания всех окон (createAllWindows). Если вы писали скрипты (или хотя бы пытались что-то изменить в чужих, как я, например) под VX Ace, то наверняка заметили схожий приём. Когда главная функция системы подменялась на нашу, а потом вызывалась внутри с такими же параметрами. Ну не суть важно, я думаю если кому интересно он спросит у знатоков, а тут просто для пояснения.&lt;/p&gt;

&lt;p&gt;Сначала создаём «копию» основной функции системы:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var _Scene_Map_createAllWindows = Scene_Map.prototype.createAllWindows;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Затем заменяем её уже своей функцией:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Scene_Map.prototype.createAllWindows = function() {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;внутри которой вызываем настоящую, что бы ничего не поломалось:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;	_Scene_Map_createAllWindows.call(this);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;И затем уже добавляем создание нашего окошка:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;	this._itemOnMap = new ItemOnMap(10,10, 120, 60);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Первые два числа — это координаты где на экране будет наше окно, а два другие его соответственно ширина и высота.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;	this.addWindow(this._itemOnMap);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Затем это окно добавляется в систему и далее собственно уже функции нашего окна:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function ItemOnMap() {
	this.initialize.apply(this, arguments);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Честно скажу, назначение этого кусочка мне до конца не ясно. Однако сразу скажу, что без него не работает и кроме того опять же очень важно название — «ItemOnMap»!! Оно идёт везде одинаковое, ошибётесь на 1 букву будут ошибки.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;ItemOnMap.prototype = Object.create(Window_Base.prototype);
ItemOnMap.prototype.constructor = ItemOnMap;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Дальше, если я правильно понимаю, копируются все параметры, свойства и собственно функции отрисовки системного окна в наш ItemOnMap. Дальше мы можем в нём менять всё что душе угодно, не боясь, что это отобразиться свойствах всех остальных окошек.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;ItemOnMap.prototype.standardPadding = function() {
	return 0;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Например, вот, по умолчанию отступ у всех окон 18px. Для того что бы наш текст и иконка были видны его стоит задать равным 0.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;ItemOnMap.prototype.initialize = function(x, y, width, height) {
Window_Base.prototype.initialize.call(this, x, y, width, height);
	this._id = 1;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее, как я понимаю идёт инициализация нашего окна, с такими же параметрами как у главного.&lt;/p&gt;

&lt;p&gt;Ну и самое интересное. Окно появилось, и остаётся только вывести в него информацию:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;ItemOnMap.prototype.update = function() {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для этого необходимо в функции update написать то, что мы хотим вывести в нашем окне.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;	this.contents.clear();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для начала его надо очистить, если этого не сделать всё будет накладываться друг на дружку и в конце концов будет выглядеть ужасно.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;	if ($gameSwitches.value(enableSwitchId)) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее мы проверяем, разрешено ли показывать наше окно, если да, то:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;		this.show();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Покажем окно&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;		this.resetTextColor();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Установим настройки (цвет, размер) текста по умолчанию&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;		var itemId = $gameVariables.value(itemVarId);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Берём номер предмета, который нужно отобразить:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;		if (itemId == 0) {
			itemId = 1;
		}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Проверяем, что бы он не был равен 0, иначе будет ошибка.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;		this.drawIcon($dataItems[itemId].iconIndex, 15, 15);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Рисуем нашу иконку. $dataItems[itemId].iconIndex номер иконки предмета, и две последующие цифры это координаты x,y внутри нашего окна.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;		this.drawTextEx(&quot;:&quot; + $gameVariables.value(countVarId), 52, 15);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее выводим наше число из переменной, и опять же два последующих числа это координаты x,y внутри нашего окна, но только уже для вывода текста.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;	} else {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если же показывать окно нельзя, то&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;		this.hide();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Скроем его и закончим данную функцию.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Собственно, на этом всё, остаётся только не забыть закончить главную функцию плагина:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Как видите ничего сложного почти нет. Хотя по правде говоря было очень непросто сходу разобраться со всем этим, и, если бы не потраченные дни предварительного разбирания и ковыряния VX Ace, мне бы не удалось это всё сделать так «быстро». Однако надо сказать огромное спасибо авторам, что так же как в VX Ace, RMMV название функций и переменных очень схожи, что конечно хоть и не сильно, но всё же упрощает написание плагинов под RMMV.&lt;/p&gt;

&lt;p&gt;Если вдруг будут какие-то вопросы, постараюсь в меру своих сил ответить.&lt;/p&gt;

&lt;p&gt;p.s. огромное спасибо всем, кто мне помогал и помогает разбираться с премудростями RPG Maker, как здесь на форуме, так и в нашем горячо любимом чатике. Как видите мои глупые вопросы наконец вылились во что-то если не серьёзное, так во что-то не плохое это точно.&lt;/p&gt;

&lt;p&gt; Небольшое дополнение:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;

&lt;p&gt;Если необходимо, что бы окно так же отображалось во время боя, то для этого достаточно перед строчкой «function ItemOnMap() {»&lt;/p&gt;

&lt;p&gt;Добавить, по аналогии с «_Scene_Map_createAllWindows»:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//Обновление окон во время битвы
var _Scene_Battle_createAllWindows = Scene_Battle.prototype.createAllWindows;
Scene_Battle.prototype.createAllWindows = function() {
	_Scene_Battle_createAllWindows.call(this);
	this._itemOnMap = new ItemOnMap(10,10, 120, 60);
	this.addWindow(this._itemOnMap);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Правда появятся небольшие проблемы:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Pishem svoj pervyj plagin dla RPG Maker MV/items_on_map.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Наше окошко будет перекрывать системные сообщения о битве. Поэтому нужно указать где-то другое место.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Ссылки по теме&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Готовый &lt;a href=&quot;https://yadi.sk/d/j7MrpQHK3GZNun&quot;&gt;пример проекта&lt;/a&gt; с использованием вышеописанного плагина.&lt;/li&gt;
  &lt;li&gt;Свежая версия скрипта &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/ItemOnMap.js&quot;&gt;ItemOnMap.js&lt;/a&gt; всегда доступна на github в разделе &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/&quot;&gt;примеров&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="archive" /><category term="rpg maker mv" /><category term="plugins" /><category term="story" /><category term="уроки" /><summary type="html">Всем доброй ночи.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/Pishem%20svoj%20pervyj%20plagin%20dla%20RPG%20Maker%20MV/plugin_title.png" /></entry><entry><title type="html">Всем привет!</title><link href="https://murlab.github.io/blog/Vsem%20privet!/" rel="alternate" type="text/html" title="Всем привет!" /><published>2015-11-05T00:00:00+03:00</published><updated>2015-11-05T00:00:00+03:00</updated><id>https://murlab.github.io/blog/Vsem%20privet!</id><content type="html" xml:base="https://murlab.github.io/blog/Vsem%20privet!/">&lt;p&gt;Всем привет и добро пожаловать в мой блог, посвященный редактору rpg maker и в частности разработке моей игрушки «Приключения нэки: кошачья деревня».&lt;/p&gt;

&lt;p&gt;Честно говоря, идея создать свой блог возникла спонтанно, после прочтения одной заметки о том, как создатели игры «&lt;a href=&quot;http://message-quest.com/&quot;&gt;Message Quest&lt;/a&gt;» проходили Greenlight.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Основная идея статьи сводилась к тому, что к выпуску игры нужно готовится заранее, а лучше о ней рассказывать, как можно чаще и интереснее, особенно нравится читать о всяческих трудностях технического характера и как разработчики с этим справлялись.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Vsem privet!/screenshot_01.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;По правде говоря, в начале у меня как бы не было идеи делать что-то серьёзное и уж тем более мечтать о Greenlight или даже Steam. Мне просто хотелось осуществить давнюю мечту, попробовать сделать свою игру. Знаний и возможностей у меня не было, а тут так удачно полученный подарок в виде RPG Maker VX Ace меня заинтриговал. Сделав небольшую демку из стандартных ресурсов и показав её друзьям из Google+, мне вдруг захотелось немного большего. Не смотря на массу ошибок, ляпов и недочётов игра всё-таки понравилась им, была даже организована целая группа &lt;del&gt;поддержки&lt;/del&gt; по разбору ошибок. В последствии группа даже переродилась даже в более что-то серьёзное, отчёты об ошибках в системе &lt;a href=&quot;https://trello.com/b/5Q55S9zn/%D0%BF%D1%80%D0%B8%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BD%D1%8D%D0%BA%D0%B8&quot;&gt;Trello&lt;/a&gt;. (Отдельное спасибо за помощь &lt;a href=&quot;https://plus.google.com/+%D0%9A%D0%B8%D1%80%D0%B8%D0%BB%D0%BB%D0%A5%D1%80%D0%BE%D0%BC%D0%BE%D0%B2&quot;&gt;+Кирилл Хромов&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Vsem privet!/screenshot_02.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Видя всю серьёзность дела, первым что мне захотелось, это по возможности заменить стандартную графику, которую предоставляет редактор. Ибо первое что кидается в глаза в Steam это просто жуткое однообразие игр, сделанных в RPG Maker. Все они выглядят как братья близнецы и очень сложно себе представить, чем же таким так заинтересовали авторы, что им удалось не только пройти Steam Greenlight, но и продаваться. Впрочем, почитав комментарии, не трудно убедится, что мои опасения не напрасны. Сразу всем кидается в глаза это то, что всё как с кальки срисовано, а также, что игра в очень маленьком окошке.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Vsem privet!/screenshot_03.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Изначально игра делалась в «RPG Maker VX Ace», использовалось достаточно много (порядка 50 штук), как сторонних скриптов, так и моих небольших доделок, правок и мелких скриптов на Ruby, за что хочется сказать отдельное спасибо &lt;a href=&quot;https://plus.google.com/+ReiAyanamiSuki&quot;&gt;+Rei Ayanami&lt;/a&gt;. Благодаря его помощи мне удалось решить кучу мелких и не очень вопросов по скриптам. Так же очень хотелось бы поблагодарить &lt;a href=&quot;https://www.youtube.com/channel/UCGHnC1c6jY_oxOsAyJ9iA7Q&quot;&gt;Hellyintar Black&lt;/a&gt; он же Сириус. Благодаря его урокам мне удалось за относительно короткое время разобраться со скриптами и особенностями редактора. А кроме того он часто показывает в своих уроках, что не всегда обязательно использование скриптов и что многие вещи можно сделать стандартными средствами RPG Maker.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Vsem privet!/rpg_maker_mv.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;C выходом «RPG Maker MV» мне захотелось перенести игру на него. Во-первых, он наконец стал поддерживать большие разрешения экрана, игра визуально работает быстрее, ну и плюс ещё возможность выпускать игру одновременно и на мобильных устройствах. Новый редактор предоставляет гораздо большие возможности, однако и требует заново разбираться со скриптовым языком, на этот раз с JavaScript. Само собой, это повлекло некоторую «заморозку» игры. Помимо того, что старые скрипты уже не работают, выяснилось, что и графика теперь стала крупнее. Всё остальное же без проблем было перенесено из старого редактора VX Ace. Осталось всё привести в порядок, подправить графику до актуального состояния ну и найти замену старым скриптам.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Vsem privet!/screenshot_04.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, как видно из скриншота, банальное увеличение размера тайлов не очень хорошо сказалось на картине в целом. Графика стала слегка как бы замыленная, а в местах стыков, например, тех же деревьев, видны артефакты. Так что «халявы» не получилось. Придётся опять засучить рукава и приводить всё в порядок. Зато главная героиня стала крупнее, красивее и похожа на то, как задумывалась изначально. В целом всё остальное работает нормально, я имею в виду диалоги, события и всё что не завязано на скрипты.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015-11-05/Vsem privet!/sv_mainhero.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В данный момент я усиленно разбираюсь как с самим редактором, так и со скриптами и хочу сказать, что у меня получается гораздо лучше. Возможно сказывается уже опыт «ковыряния» скриптов на VX Ace, возможно по JavaScript больше понятной документации, а возможно и не без помощи &lt;a href=&quot;http://rpgmaker.ru/social/mypage/17159-evilcat&quot;&gt;EvilCat&lt;/a&gt; со светлой, которая имеет хороший опыт разработки на JavaScript, а главное, что этот опыт применим к RPG Maker. Впрочем, она и сама уже начала писать различные плагины и охотно отвечает на все мои вопросы.&lt;/p&gt;

&lt;p&gt;Потраченное время не прошло даром, в результате чего уже появилась парочка плагинов (так теперь называются модули скриптов) для RPG Maker MV.  В процессе разбирательств у меня появилась идея записывать свои действия в виде уроков. Во-первых, когда кому-то что-то объясняешь материал становится понятнее, а во-вторых так проще запомнить и можно вернуться, если что-то будет не ясно в будущем.&lt;/p&gt;

&lt;p&gt;Но как говорится всему своё время.&lt;/p&gt;

&lt;p&gt;Ах да, самое же главное! Спасибо огромное &lt;a href=&quot;https://plus.google.com/+VeelkaBelka&quot;&gt;+Veel&lt;/a&gt; за потрясающую титульную картинку.&lt;/p&gt;

&lt;p&gt;p.s. Исправленные некоторые ляпы, неточности и ссылки 13 декабря 2017 года.&lt;/p&gt;</content><author><name></name></author><category term="archive" /><category term="story" /><summary type="html">Всем привет и добро пожаловать в мой блог, посвященный редактору rpg maker и в частности разработке моей игрушки «Приключения нэки: кошачья деревня».</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/Vsem%20privet!/hello_title.jpg" /></entry></feed>