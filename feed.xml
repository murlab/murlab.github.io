<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://murlab.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://murlab.github.io/" rel="alternate" type="text/html" /><updated>2018-01-06T03:03:21+03:00</updated><id>https://murlab.github.io/</id><title type="html">Mur Laboratory</title><subtitle>Обожаю сладкое, аниме и игры. Так же пытаюсь делать свои с помощью RPG Maker и Godot. Иногда рисую, да,… (ღ˘⌣˘ღ)</subtitle><entry><title type="html">Своя страничка на github</title><link href="https://murlab.github.io/blog/Svoja%20stranichka%20na%20github/" rel="alternate" type="text/html" title="Своя страничка на github" /><published>2017-12-31T19:00:00+03:00</published><updated>2017-12-31T19:00:00+03:00</updated><id>https://murlab.github.io/blog/Svoja%20stranichka%20na%20github</id><content type="html" xml:base="https://murlab.github.io/blog/Svoja%20stranichka%20na%20github/">&lt;p&gt;Новогодний привет всем!&lt;/p&gt;

&lt;p&gt;Сегодня, в последний день уходящего года, мне бы хотелось… нет, не подведения итогов (: а поделится более ценной информацией, а именно как завести свою страничку, сайт на &lt;a href=&quot;https://pages.github.com/&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Для чего это может понадобится? Ну, возможно вам захочется просто делится какой-нибудь информацией, как мне, например. Можно конечно и просто сделать файловый архив своих проектов, хотя конечно авторы и не приветствуют такие «свалки». Но самое главное можно сделать онлайн версию игры на RPG Maker, как это уже было описано ранее.&lt;/p&gt;

&lt;p&gt;В отличии от «приключений» с тем же &lt;a href=&quot;https://www.google.com/intl/ru_ALL/drive/&quot;&gt;google drive&lt;/a&gt;, как мы это делали в «&lt;a href=&quot;/blog/Zapuskaem proekt v brauzere/&quot;&gt;Запускаем проект в браузере&lt;/a&gt;», здесь нам не придётся прибегать к каким-то хитроумным действиям, всё до боли просто и понятно. Хотя конечно, как и в любом деле, есть свои нюансы. Но обо всём по порядку.&lt;/p&gt;

&lt;p&gt;Для начала нам нужно зарегистрироваться на сервисе github. По сути github.io и github.com принадлежат одной организации, с той лишь разницей, что на com расположены repository или по-русски хранилище, а на io собственно сам сервис страниц пользователей.&lt;/p&gt;

&lt;p&gt;При регистрации стоит обратить внимание, что имя пользователя будет использоваться в адресе доступа к вашей странице! То есть если вы зарегистрируетесь под именем aaabbyyyyyrrrrvaaaaalgghhh, то и доступ вашей странице будет aaabbyyyyyrrrrvaaaaalgghhh.github.io! Об этом стоит помнить!&lt;/p&gt;

&lt;p&gt;Итак, переходим по &lt;a href=&quot;https://github.com/join?source=header-home&quot;&gt;ссылке&lt;/a&gt; и создаём новый аккаунт. Регистрация на английском языке, но думаю заполнение нескольких полей не вызовет у вас трудности.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Хочу обратить ваше внимание, что указанный e-mail адрес должен быть уникальным, то есть регистрации с таким e-mail не должно быть на github. В противном случае вы получите сообщение об ошибке. Пароль тоже должен быть достаточно сложным.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_2.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На втором шаге нам предложат выбрать тарифный план (по умолчанию сервис бесплатный), ну и при желании можно включить подписку на рассылку новостей. Нажимаем далее (зелёная кнопка «Continue»).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_3.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На третьем шаге вас попросят заполнить небольшую анкету о ваших навыках в программировании и кем вы являетесь.
По сути вы можете пропустить данный шаг, нажав внизу «skip this step».
К этому моменту на почту должно прийти письмо с подтверждением о регистрации. Нажимаем на ссылку и получаем подтверждение о завершении регистрации — «Your e-mail was verified».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_4.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Далее нажимаем на кнопку «Start a project» и заполняем поля в открывшейся форме.&lt;/p&gt;

&lt;p&gt;Важно! В «Repository name» указываем имя как будет называться наш сайт, а именно имя_пользователя.github.io! Никаких других символов здесь быть не должно, в противном случает система не увидит наше хранилище и как следствие вместо страницы сайт мы получим ошибку! В поле «Description» можно указать описание сайта, что это и для чего. Оставляем режим «Public», так как «Private» доступен только по подписке за дополнительную плату.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_5.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Важно! Не в коем разе не ставьте чекбокс на «Initialize this repository with a README»!! Если это сделать, система автоматически создаст в корне проекта файл README.md и сделает его главным файлом сайта вместо index.html! Даже если потом создать файл index.html, сайт упорно будет отображать содержимое README.md. Возможно где-то в глубине настроек и есть возможность переключить режим отображения на index.html, но найти это сходу мне не удалось.&lt;/p&gt;

&lt;p&gt;Если вы разбираетесь в видах лицензий, то можете выбрать одну из них. Если же нет, оставляете всё как есть и нажимаете «Create repository».&lt;/p&gt;

&lt;p&gt;Поздравляю! Вы сделали всё правильно и теперь перед глазами новый, пустой проект. Что бы проверить наш новоиспечённый сайт, нажимаем на кнопку «Create new file».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_6.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В открывшейся форме задаём название файла index.html, а в содержимом пару строк с «Hello world!»:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    hello world!
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Промотав чуть ниже заполним ещё пару строк. Очень важно при добавлении нового файла или редактировании старого, или при любых других операциях, github всегда требует описать, что сейчас происходит. Это нужно для того, чтобы в последующем вы не запутались, какие действия были произведены.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_7a.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В данном случае мы создали новый файл, поэтому так и пишем «Новый файл index.html». Если происходило много действий, которые вы бы хотели так же описать, можно уточнить информацию в большем поле ниже.&lt;/p&gt;

&lt;p&gt;Больше ничего не трогаем и нажимаем зелёную кнопку «Commit new file».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_7b.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Во вновь загруженной странице мы увидим наш файл и описание действий, при которых он был создан (изменён).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_8.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь самое время перейти на нашу страницу и проверить, что всё работает как надо:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/step_9.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На этом этапе можно считать регистрацию завершенной и перейти непосредственно к наполнению нашего сайта.&lt;/p&gt;

&lt;p&gt;Для работы с repository (хранилищем) на github мы воспользуемся программой «&lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt;». Как ни прискорбно, но авторы программы отказались от поддержки 32-битной версии Windows, посчитав что 3% от числа всех разработчиков это слишком мало, чтобы заморачиваться такой ерундой. Если вам не повезло и у вас такая версия, то при установке вы получите сообщение об ошибке.&lt;/p&gt;

&lt;p&gt;При случае я постараюсь рассмотреть ещё и другие программы (альтернативные) или же вы можете это сделать пока самостоятельно. Если же у вас Windows 64bit, то жмём кнопку «Download for Windows (64bit)» и устанавливаем программу. При первом запуске программы она предложит авторизоваться.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Нажимаем на ссылку «Sign into GitHub.com», после чего откроется форма, где вводим логин и пароль, который вы задавали при регистрации. Затем синюю кнопку «Sign in».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_2.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;После авторизации программа сообщит, что нам присвоено имя и уникальный идентификатор под которым будут загружаться изменение я в наш репозитарий (хранилище) на github. Нажимаем синюю кнопку «Continue». Программа ещё спросил разрешение для сбора анонимной статистки по использовании программы. Если вы не хотите, что никуда не отсылались никакие данные, просто снимите чекбокс(галочку) с «Yes, submit anonymized data usage» и наконец-таки нажмите синюю кнопку «Finish».&lt;/p&gt;

&lt;p&gt;Перед нами откроется рабочее окно программы:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_3.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Нас интересует третий пункт «Clone repository». Находим в списке наш проект и выбираем его. Так же можно задать расположение проекта на диске. У меня, например, создана папка Projects на диске C. Но, если вы не хотите ничего менять, то можете оставить путь по умолчанию. Главное не забудьте, где оно будет расположено:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_4.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Далее нажимаем синюю кнопку «Clone» и дожидаемся пока наш проект загрузится из интернета.&lt;/p&gt;

&lt;p&gt;Теперь если мы откроем в проводнике нашу папку с проектом, то увидим скачанный из репозитория index.html, а также файл лицензии, если он был задан при регистрации аккаунта.&lt;/p&gt;

&lt;p&gt;Если у вас в проводнике включен режим отображения скрытых и системных файлов, то вы можете видеть ещё и папку «.git». Ни при каких условия ничего не меняйте и тем более не удаляйте эту папку! В противном случае вы не сможете загрузить файлы сайта обратно в github.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_5.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь попробуем отредактировать наш файл «index.html» в любом текстовом редакторе, например, открыв его в блокноте. Изменим содержимое на:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&amp;lt;html&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;Hello world!&amp;lt;/h1&amp;gt;
    Happy New Year 2018!
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Не забудем сохранить изменения и переключимся обратно в программу «Desktop GitHub»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_6.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Рассмотрим подробнее, что же мы тут видим. Слева колонка с файлами (папками) которые были изменены. В данном случае у нас изменён только один файл — «index.html». В правой колонке показаны изменения, которые были произведены с данным файлом, а именно удалена строка 3, она отмечена красным и на её место добавлены две новых (отмечены зелёным).&lt;/p&gt;

&lt;p&gt;Теперь зададим описание действий, что мы делали — «Обновлён index.html» и нажимаем синюю кнопку «Commit to master». Изменения будут сохранены в локальной копии, а для того что бы загрузить их на наш сайт нажимаем вверху, в серой панели — «Push Origin» (На скриншоте она в данный момент выглядит как «Fetch Origin»).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_7.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь заходим в наш репозитарий (хранилище) на github и так же видим наши изменения. В зависимости от размера загружаемых данных, изменения на сайте применятся от нескольких секунд до пары минут. Теперь можем обновить нашу страничку в браузере и увидеть изменения:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/desktop_8.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь можно локально (у себя на диске) изменять файлы, удалять, создавать новые, переименовывать, перемещать итд. Главное не забывать делать «Commit to master» и затем «Push Origin».&lt;/p&gt;

&lt;p&gt;Ну и в заключении, для чего мы всё это делали. Создадим новый проект в RPG Maker MV или возьмём готовый. В меню выберем «File → Deployment» (в русской версии это будет «Файл → Экспорт»). В открывшемся окошке выбираем «Web Browsers» (Веб-браузеры). Ставим обязательно галочку в option — «Exclude unused files» (Исключить не использованные файлы). Указываем путь куда выгрузить наш проект и нажимаем «OK»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/upload_1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Несмотря на то, что мы включили режим «исключить не использованные файлы» проект получился достаточно объёмным, около 90Mb. Поэтому при желании лучше его ещё почистить от неиспользованных файлов. GitHub предоставляет в использование по рекомендации до 1GB - на каждый из хранилищ. При достижении данного объема система пришлет вам письмо «об уменьшении объемов занимаемых файлов». Так же есть ограничение, что один файл не должен иметь размер более 100МБ.&lt;/p&gt;

&lt;p&gt;Но вернёмся к нашим выгруженным файлам. Внутри мы находим папку с названием нашего проекта, а ещё дальше папку www. Теперь копируем её содержимое в папку где у нас располагается локальная копия сайта github (у меня это было C:\Projects\murplay.github.io). При этом переписываем наш файл index.html. По завершении копирования, мы увидим следующую картинку в «GitHub Desktop»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/online_1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь остаётся добавить сначала всё в локальную копию, выполнить «Commit to master», и затем «Push Origin».&lt;/p&gt;

&lt;p&gt;Загрузка займёт некоторое время, всё-таки порядка 280 файлов будет загружаться.&lt;/p&gt;

&lt;p&gt;По завершении открываем страничку с нашим проектом и вуаля, наша онлайн-версия работает.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/31 - Svoja stranichka na github/final.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Конечно тут будут некоторые нюансы, например, та же музыка будет воспроизводится не сразу, а лишь после подзагрузки, но это всё мелочи, решаемые плагинами. Так же хочу сказать, что github, это далеко не обычное облачное хранилище как например dropbox или google disk. Это серьёзный инструмент с возможностью контроля версий, возможностью сравнить различные версии, возможностью работать в команде и другие всякие серьёзные плюшки. Когда-нибудь (когда я в этом разберусь) я обязательно расскажу подробнее, а пока на этом всё!&lt;/p&gt;

&lt;p&gt;Хорошего настроения, творческих успехов и конечно же удачи в новом году!&lt;/p&gt;

&lt;p&gt;p.s. В будущем можно будет попробовать новые плагины онлайн — &lt;a href=&quot;http://murplay.github.io/&quot;&gt;http://murplay.github.io/&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="rpg maker mv" /><category term="github" /><category term="уроки" /><summary type="html">Новогодний привет всем!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/31%20-%20Svoja%20stranichka%20na%20github/page_title.png" /></entry><entry><title type="html">RMMV Графика для событий</title><link href="https://murlab.github.io/blog/RMMV%20Grafika%20dlja%20sobytij/" rel="alternate" type="text/html" title="RMMV Графика для событий" /><published>2017-12-29T02:04:00+03:00</published><updated>2017-12-29T02:04:00+03:00</updated><id>https://murlab.github.io/blog/RMMV%20Grafika%20dlja%20sobytij</id><content type="html" xml:base="https://murlab.github.io/blog/RMMV%20Grafika%20dlja%20sobytij/">&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;Сегодня мне бы хотелось рассказать об одной своей новой поделке, а именно о скрипте для RPG Maker MV — «MUR Event Graphics».&lt;/p&gt;

&lt;p&gt;Изначально данный скрипт задумывался для того, чтобы дать возможность немного смещать графику событий, относительно центра.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;По правде говоря, мне уже порядком поднадоело перерисовывать по десять раз одни и те же картинки каждый раз подгоняя, а достаточно ли теперь стоит тумбочка близко к стене или же её ещё надо подвинуть на пару пикселей. Или же делать несколько вариантов, когда книжка лежит с одного края стола, а теперь она ближе к другому краю, а вот на кровати она вообще должна быть по центру и выше итд.&lt;/p&gt;

&lt;p&gt;Конечно в интернете уже достаточно «обсосали» и не раз эту тему «смещения графики событий» и был написан не один скрипт, как и для VX Ace, так и для MV, но мне всё же захотелось сделать свой вариант и на это были причины.&lt;/p&gt;

&lt;p&gt;Во всех ранее предложенных вариантах была примерна одна и та же схема. В начале события создаются комментарии в которых описываются настройки, как и куда смещать нашу картинку события.  По сути у меня такая же схема, задаём команду с параметрами и вуаля.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/29 - RMMV Grafika dlja sobytij/comments.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Начнём с первой команды, собственно команды смещения графики — &lt;strong&gt;&amp;lt;move_event_gfx_to: x, y, z&amp;gt;&lt;/strong&gt;. Как не трудно догадаться &lt;strong&gt;x&lt;/strong&gt; и &lt;strong&gt;y&lt;/strong&gt; это смещение по горизонтали и вертикали соответственно. Причём можно задать отрицательные числа и картинка будет смещена в противоположную сторону. Меняя значение &lt;strong&gt;z&lt;/strong&gt; можно задать номер слоя и, картинка может оказаться как за игроком, так и над ним (не меняя основные свойства события — «&lt;em&gt;priority&lt;/em&gt;»).&lt;/p&gt;

&lt;p&gt;Следующая идея была немного «оживить» графику события. В моей игрушке есть дирижабль, который стоит на привязи, но слегка колышется вверх-вниз.&lt;/p&gt;

&lt;p&gt;Изначально у меня было отрисовано три кадра с положением, и они циклически сменялись. Выглядело это не очень, кадров мало, возни много. И тут пришла в голову идея, что было бы очень классно, если бы картинка с дирижаблем «болталась» сама по себе без участия покадровой анимации.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/29 - RMMV Grafika dlja sobytij/zeppelin.gif&quot; class=&quot;imgLeft&quot; /&gt;Так появилась команда — &lt;strong&gt;&amp;lt;slide_event_vertical: size, speed&amp;gt;&lt;/strong&gt;. Как ясно из названия это скольжение, а если быть точнее, то циклическое движение с эффектом маятника. По краям движение затухает, пока не сменит направление, а в середине максимально ускоряется. В параметрах можно задать размер зоны движения — &lt;strong&gt;size&lt;/strong&gt;, ну и скорость движения «объекта» — &lt;strong&gt;speed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Команда &lt;strong&gt;&amp;lt;slide_event_horizontal size, speed&amp;gt;&lt;/strong&gt; повторяет предыдущую, лишь с той разницей, что движение (мотание) происходит уже горизонтально.&lt;/p&gt;

&lt;p&gt;Возможно многие замечали, что в RPG Maker MV очень много всяких мелких недочётов, они не влияют на игровой процесс, но это как песок в сандалиях, ходить не мешает, но весьма неприятно.&lt;/p&gt;

&lt;p&gt;К такому вот «песочку» относится момент, когда персонаж заходит в какую-нибудь дверь. Меня вот очень раздражает, что он как бы входит, но при этом верхняя часть головы постоянно задевает за дверной косяк. Конечно можно нарисовать дверь чуть больше, нарисовать какую-нибудь специальную анимацию, но мне захотелось решить это вопрос раз и навсегда.&lt;/p&gt;

&lt;p&gt;Идея заключается в следующем: например, берём событие с дверью, и добавляем к нему две дополнительные картинки. Одна располагается за событием (дверью), другая поверх события.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/29 - RMMV Grafika dlja sobytij/house_parts.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На первой (фоновой) картинке мы рисуем часть здание с тёмным (светлым) дверным проёмом, а на второй (передней) картинке мы оставляем часть изображения, но лишь до места где начинается уже сам вход.&lt;/p&gt;

&lt;p&gt;Когда персонаж заходит в дверь, он оказывается между двумя картинками и уже «не стукается головой», а спокойно проходит в дверной проём.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/29 - RMMV Grafika dlja sobytij/house.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;У этой идеи есть ещё один плюс. Во-первых, в тайлах вместо элементов (или даже целого) здания остаётся свободное место под другие элементы декора, а во-вторых теперь здания можно делать более уникальными (красивыми, разнообразными), они не привязаны ни к сетке тайлов, ни к размерам, ни к тем более положению (дверь всегда по центру).&lt;/p&gt;

&lt;p&gt;Ну и собственно сами команды — &lt;strong&gt;&amp;lt;set_event_bg_gfx: bitmap, offsetX, offsetY&amp;gt;&lt;/strong&gt; и &lt;strong&gt;&amp;lt;set_event_fg_gfx: bitmap, offsetX, offsetY&amp;gt;&lt;/strong&gt;. Первая (bg) задаёт фоновую картинку, вторая соответственно переднюю. В bitmap указывается имя картинки, которая будет подгружена из &lt;em&gt;img/events/&lt;/em&gt;, а &lt;strong&gt;offsetX&lt;/strong&gt;, &lt;strong&gt;offsetY&lt;/strong&gt; её смещение относительно центра события, например, если мы всю туже дверь захотим сместить.&lt;/p&gt;

&lt;p&gt;Следующая идея была сделать если не полноценную, то хотя бы упрощённую анимацию. Сейчас, например, можно сделать анимацию у события следующим образом. Наклепать кучу вкладок (шагов) события с привязкой к значению какой-нибудь переменной. Переходим на новый шаг, меняется картинка, меняем переменную, выжидаем паузу и хоп на следующем опросе «системой» у нас новая картина. Ну и конечно всё это должно быть в режиме «&lt;em&gt;parallel&lt;/em&gt;» (параллельно).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/29 - RMMV Grafika dlja sobytij/animation.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;У этого метода куча недостатков, начиная с того, что это просто нудно делать, и заканчивая тем, что очень сложно потом отследить логику события, если по ходу придётся переключатся по каким-либо условиям.&lt;/p&gt;

&lt;p&gt;Для того, чтобы избавить себя от этого «дурдома» с кадрами, была придумана команда — &lt;strong&gt;&amp;lt;animation_event_start: frames, pause, reverse&amp;gt;&lt;/strong&gt;. Данная команда поэтапно показывает кадры события начиная с вниз 1, вниз 2, вниз 3, влево 1, влево 2,… итд.  Количество кадров можно ограничить, задав параметр — &lt;strong&gt;frames&lt;/strong&gt;. Задержку перед очередной сменой кадра можно задать в &lt;strong&gt;pause&lt;/strong&gt;. Дойдя до последнего кадра, анимация начнётся вновь с первого кадра (вниз 1), но если задать &lt;strong&gt;reverse&lt;/strong&gt; — &lt;em&gt;true&lt;/em&gt;, то анимация продолжится в обратном порядке.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/29 - RMMV Grafika dlja sobytij/mill.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Можно конечно было бы сделать возможность и задавать внешний файл с кадрами анимации, и задавать произвольную последовательность кадров, но по правде говоря мне очень не хотелось сильно усложнять плагин, тем более, что в нём и так всё очень непросто.&lt;/p&gt;

&lt;p&gt;В качестве продолжения идеи со «скольжением» картинки, получилась ещё одна команда — &lt;strong&gt;&amp;lt;jump_event: hight, speed&amp;gt;&lt;/strong&gt;. Как не трудно догадаться из названия, картинка будет прыгать. Например, во многих аркадных играх это различные звёздочки, монетки и другие плюшки. Параметр &lt;strong&gt;hight&lt;/strong&gt; задаёт как высоко будет прыгать картинка, а &lt;strong&gt;speed&lt;/strong&gt; соответственно насколько это будет быстро происходить.&lt;/p&gt;

&lt;p&gt;В дополнении к «прыжкам» есть ещё одна команда — &lt;strong&gt;&amp;lt;set_event_shadow_to: bitmap, offsetX, offsetY&amp;gt;&lt;/strong&gt;. Данная команда добавляет позади нашего события ещё одну картинку и работает в паре с &lt;strong&gt;slide_event_vertical&lt;/strong&gt; или &lt;strong&gt;jump_event&lt;/strong&gt;. В отличии от того же &lt;strong&gt;set_event_bg_gfx&lt;/strong&gt; данная картинка подвергается дополнительным изменениям.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/29 - RMMV Grafika dlja sobytij/coin.gif&quot; class=&quot;imgRight&quot; /&gt; Например, задав в качестве &lt;strong&gt;bitmap&lt;/strong&gt; изображение тени (которое также будет загружено из &lt;em&gt;img/events/&lt;/em&gt;), оно будет изменять свой размер и прозрачность (уровень &lt;em&gt;alpha&lt;/em&gt;) в зависимости от позиции картинки &lt;strong&gt;slide_event_vertical&lt;/strong&gt; или &lt;strong&gt;jump_event&lt;/strong&gt;. Чем выше картинка события, тем меньше картинка тени и соответственно она менее видна, чем картинка опускается ниже, тем тень становится больше и более заметна.&lt;/p&gt;

&lt;p&gt;Всё это конечно же мелочи, но в целом, я думаю, они сделают вашу игру более привлекательной, а процесс её создания менее утомительным. Скачать свежую версию плагина всегда можно с &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/tree/master/Event%20Graphics&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Удачи и творческих успехов!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Обновление от 2 января 2018 г.&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;
&lt;p&gt;К сожалению, совсем вылетело из головы, что такие объекты как Sprite, а тем более bitmap, нельзя создавать в объектах, которые потом будут сохранятся. Начиная ещё с VX Ace, RPG Maker очень нервничает, когда в файле сохранения появляются «крупные» объекты с непонятным содержимым. Так и получилось с Event’ами, ведь их состояние сохраняется в каждом файле сохранения игры, а вместе с ним и пытались сохраниться данные навешанных картинок.&lt;/p&gt;

&lt;p&gt;Сейчас логика скрипта несколько переписана, спрайты и их картинки создаются в массивах плагина и никак не связаны с содержимым event’а. Игра успешно сохраняется и загружает состояние событий.
Надеюсь больше никаких ляпов не вылезет ещё ~_~’&lt;/p&gt;

&lt;p&gt;Обновлённая версия 1.1 как всегда доступна на &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/tree/master/Event%20Graphics&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Обновление от 6 января 2018 г.&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;
&lt;p&gt;Пффф! К сожалению или к радости выявился ещё один досадный глюк, который был успешно исправлен.&lt;/p&gt;

&lt;p&gt;При обновлении сцены (например открыть/закрыть меню) все ивенты сцены зачем-то удаляются со сцены, а затем на нё же ещё раз и добавляются заново. Ну а по скольку мой скрипт считал, что у нас уже сцена построена и ничего перерисовывать не надо тихо и молчал.&lt;/p&gt;

&lt;p&gt;Теперь при вызове метода Spriteset_Map.prototype.createCharacters элементам проставляется атрибут «а добавься ка ты на сцену ещё разок».&lt;/p&gt;

&lt;p&gt;Новая версия 1.2 как обычно на &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/tree/master/Event%20Graphics&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="rpg maker mv" /><category term="plugins" /><category term="javascript" /><summary type="html">Всем привет!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/29%20-%20RMMV%20Grafika%20dlja%20sobytij/plugin_title.png" /></entry><entry><title type="html">Ace Shop Item Features Add-On</title><link href="https://murlab.github.io/blog/Ace%20Shop%20Item%20Features%20Add-On/" rel="alternate" type="text/html" title="Ace Shop Item Features Add-On" /><published>2017-12-26T23:40:00+03:00</published><updated>2017-12-26T23:40:00+03:00</updated><id>https://murlab.github.io/blog/Ace%20Shop%20Item%20Features%20Add-On</id><content type="html" xml:base="https://murlab.github.io/blog/Ace%20Shop%20Item%20Features%20Add-On/">&lt;p&gt;Всем привет!
В далёком 2014м году, разбираясь с премудростями RPG Maker VX Ace и за одно с основами написания скриптов на ruby, у меня получился вот такой скрипт — «Ace Shop Item Features Add-On».&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Точнее будет сказать это не совсем полноценный скрипт, а всего лишь дополнение (модификация) к скрипту «&lt;a href=&quot;https://yanflychannel.wordpress.com/rmvxa/menu-scripts/ace-shop-options/&quot;&gt;Ace Shop Options&lt;/a&gt;» от небезызвестного &lt;a href=&quot;http://yanfly.moe/&quot;&gt;Yanfly&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/26 - Ace Shop Item Features Add-On/1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ace Shop Options, значительно расширяет возможности стандартного магазина в VX Ace, мой скрипт позволяет отображать дополнительную информацию.&lt;/p&gt;

&lt;p&gt;В игровом движке VX Ace нигде нет отображение полной информации о свойствах предметов, оружия или брони. И если некоторые свойства такие как эффект лечения, эффект отравления, увеличение (снижение) уровня жизни (HP) или маны (MP) можно хоть как-то заметить визуально, то вот остальные свойства отображаются только в самом редакторе VX Ace и доступны лишь разработчику. Игроку остаётся лишь догадываться о их наличии у предмета.&lt;/p&gt;

&lt;p&gt;Мне показалось как минимум очень странным такое положение вещей, в результате чего и появилось моё дополнение.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/26 - Ace Shop Item Features Add-On/2.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Оно конечно далеко от идеала и позволяет отобразить лишь первые 6 свойств предмета. Ограничение связано с особенностями дизайна «Ace Shop Options», но в любом случае я думаю это лучше, чем ничего.&lt;/p&gt;

&lt;p&gt;Как видно из скриншотов, красным цветом отображаются условно плохие свойства (дебафы, понижения, замедления итд), а зелёным условно хорошие (бафы, повышения, ускорения итд). Всё это условно поскольку ситуация не всегда однозначно плохая или хорошая.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/26 - Ace Shop Item Features Add-On/features.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Данные берутся из секции «features» и как уже было сказано отображаются первые шесть пунктов. Так что если у предмета свойств больше, то стоит на первое место перетянуть наиболее значимые.&lt;/p&gt;

&lt;p&gt;Так же, если установлен скрипт «&lt;a href=&quot;http://himeworks.com/2014/03/item-rarity/&quot;&gt;Hime Item Rarity&lt;/a&gt;» от не менее небезызвестного &lt;a href=&quot;http://himeworks.com/&quot;&gt;姫HimeWorks&lt;/a&gt;, то названия предметов окрашиваются в раритетные цвета. Но об этом подробнее читайте описание соответствующего скрипта.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/26 - Ace Shop Item Features Add-On/3.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Хочу ещё обратить ваше внимание, что изначально скрипт писался для английской версии VX Ace и соответственно все названия свойств так же были на английском языке. Несколько позже была выпущена русифицированная версия скрипта.&lt;/p&gt;

&lt;p&gt;Поскольку у меня никогда не было русской версии VX Ace, то перевод свойств был сделать примерно похожим по смыслу. Так что, если у вас есть пожелания по исправлению, как вам кажется неточностей перевода, я с радостью их выслушаю.&lt;/p&gt;

&lt;p&gt;В начале скрипта присутствует своего рода словарик, так что при желании скрипт можно перевести на любой язык. Так же в начале присутствуют настройки цветов в формате RGB для отображения плохих/хороших свойств.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/26 - Ace Shop Item Features Add-On/vocab.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Скрипт так же поддерживает расширение возможностей «&lt;a href=&quot;https://yanflychannel.wordpress.com/rmvxa/menu-scripts/ace-menu-engine/&quot;&gt;Ace Menu Engine&lt;/a&gt;» от того же Yanfly и позволяет изменить положение окна помощи (описания предмета) вверху, посредине или внизу экрана.&lt;/p&gt;

&lt;p&gt;Последние версии скриптов (русскую и английскую) можно найти в соответствующем разделе на &lt;a href=&quot;https://github.com/murlab/rpg-maker-vx-ace-scripts/tree/master/Ace%20Shop%20Item%20Features%20Add-On&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Надеюсь вам пригодится моё дополнение и удачного мукеризма ;)&lt;/p&gt;</content><author><name></name></author><category term="rpg maker vx ace" /><category term="scripts" /><category term="ruby" /><category term="story" /><summary type="html">Всем привет! В далёком 2014м году, разбираясь с премудростями RPG Maker VX Ace и за одно с основами написания скриптов на ruby, у меня получился вот такой скрипт — «Ace Shop Item Features Add-On».</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/26%20-%20Ace%20Shop%20Item%20Features%20Add-On/script_title.png" /></entry><entry><title type="html">Пишем свой первый плагин v2.0 Часть 1</title><link href="https://murlab.github.io/blog/Pishem%20svoi%20pervyj%20plagin%20v2.0%20chast%201/" rel="alternate" type="text/html" title="Пишем свой первый плагин v2.0 Часть 1" /><published>2017-12-19T01:00:00+03:00</published><updated>2017-12-19T01:00:00+03:00</updated><id>https://murlab.github.io/blog/Pishem%20svoi%20pervyj%20plagin%20v2.0%20chast%201</id><content type="html" xml:base="https://murlab.github.io/blog/Pishem%20svoi%20pervyj%20plagin%20v2.0%20chast%201/">&lt;div class=&quot;dictum&quot;&gt;Немного обновлённая и исправленная версия со «Светлой Академии».&lt;/div&gt;

&lt;p&gt;Как быстро летит время, казалось бы, только вчера вышел RPG Maker MV, а уже пролетело 2 года. За это время много что изменилось, выходили новые версии самого редактора, поменялось много чего в самом движке MV, а главное за эти два года мои личные знания тоже изменились от «ну эт вот тут такая штука» до «класс наследует свойства родителя».&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Перечитав свой урок «&lt;a href=&quot;/blog/Pishem%20svoj%20pervyj%20plagin%20dla%20RPG%20Maker%20MV/&quot;&gt;Пишем свой первый плагин&lt;/a&gt;», мне стало немного стыдно. Многое написано слишком уж по-детски, а многие вопросы вообще были не освещены или описаны в стиле «ну эт вот тут так надо». Спустя некоторое время мне захотелось немного переработать написанный материал. Но не пугайтесь, я не буду заменять всё слишком заумными словами, а просто постараюсь выражаться более грамотно, ну и по возможности более подробно.&lt;/p&gt;

&lt;p&gt;Начну, пожалуй, с редакторов. В своё время мне понравился редактор «&lt;a href=&quot;http://brackets.io/&quot;&gt;Brackets&lt;/a&gt;». Не скажу, что он плох, но бывает немного порой медлительным. Как альтернативу стоит упомянуть как минимум «&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;» и «&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;». Не буду на них особо заострять внимание, скажу лишь то, что в «Visual Studio Code» очень большая база всевозможных плагинов и дополнений (выпадающие подсказки, отладка итд), а «Sublime Text» на сегодняшний день однозначно самый быстрый редактор, с не менее большими возможностями.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/editors.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;При желании я думаю вы и сами с ними разберётесь, в крайнем случае можно писать скрипты и в обычном блокноте.&lt;/p&gt;

&lt;p&gt;Но вернёмся к RPG Maker MV. Как пример мы будем рассматривать всё тот же плагин отображения предметов на экране «&lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/ItemOnMap.js&quot;&gt;ItemsOnMap&lt;/a&gt;». С недавних пор в MV немного изменилось окно отображения параметров плагинов, и мы рассмотрим всё это более подробно.&lt;/p&gt;

&lt;p&gt;Начнём с самого простого, с оформления нашего нового скрипта. Для этого создадим новый файл «MUR_ItemsOnMap_2.js» в папке нашего проекта «js/plugins/MUR_ItemsOnMap_2.js» с таким вот минимальным кодом:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// MUR Items On Map v2.0
//=============================================================================
/*:
 * @plugindesc Show Items On Map v2.0
 * @author Mur
 *
*/
 
(function() {
 
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Этого вполне достаточно, чтобы наш плагин вот так отображался:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_01.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Пройдёмся более детально по частям:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// MUR Items On Map v2.0
//=============================================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Данная конструкция может дублировать название имени файла скрипта для удобства отображения. Вы в праве написать там свой текст, название или как-то оформить по-другому, а можете вообще ничего не писать, это никак не повлияет на дальнейшую работу скрипта.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*:
 * @plugindesc Show Items On Map v2.0
 * @author Mur
 *
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Эта часть очень важная и в ней описывается название плагина, его &lt;strong&gt;автор&lt;/strong&gt;, различные &lt;strong&gt;параметры&lt;/strong&gt; и прочая &lt;strong&gt;информация&lt;/strong&gt; которая отображается в окне при подключении плагина. Более подробно мы рассмотрим чуть ниже.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(function() {
 
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь в дальнейшем будет расположен код нашего плагина. Обрамление &lt;strong&gt;function&lt;/strong&gt; необходимо для того, чтобы ограничить область видимости нашего скрипта. То есть все переменные и функции, описанные здесь не будут доступны в других плагинах, а при совпадении названий, они &lt;strong&gt;не будут заменены&lt;/strong&gt; значениями других переменных и функциями, описанными в других плагинах. Однако есть ситуации, когда этим правилом можно пренебречь, но в данном примере мы этого рассматривать не будем.&lt;/p&gt;

&lt;p&gt;Вернёмся к описанию плагина. У нас имеется два поля &lt;strong&gt;@plugindesc&lt;/strong&gt; и &lt;strong&gt;@author&lt;/strong&gt;. Как не трудно догадаться, первое это описание нашего плагина, а второе указание его автора. Вы может там написать абсолютно любой текст, на любом языке, при условии, что ваш файл сохранён в кодировке UTF-8 (современные редакторы предлагают это делать по умолчанию). Однако есть немного неприятный момент. Дело в том, что зарубежные пользователи скорее всего не смогут понять, о чём речь. Для того, чтобы сделать наш плагин интернациональными, по крайней мере ту часть которая отвечает за описание, мы несколько усложним описание плагина. А именно сделаем две секции описаний, на английском языке и на русском:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// MUR Items On Map v2.0
//=============================================================================
/*:en
 * @plugindesc Show Items On Map v2.0
 * @author Mur
 *
*/
/*:ru
 * @plugindesc Показать предметы на карте v2.0
 * @author Mur
 *
*/
 
(function() {
 
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь, если мы запустим английскую версию RPG Maker MV, то получим описание как на скриншоте выше, а если запустим русскую версию, то соответственно описание будет на русском языке:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_02.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Рассмотрим ещё одну часть описания плагина, а именно «Help», или как в русской версии указано «Справка». Для того что бы разместить в информацию в этом блоке достаточно добавить в наш скрипт ещё одно поле @help:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*:ru
 * @plugindesc Показать предметы на карте v2.0
 * @author Mur
 * @help это пример описания помощи по настройке нашего скрипта «Show Items On Map»
 * Это вторая строка описания
 * Это третья строка описания
 * Это четвёртая строка описания
 * Это пятая строка описания
 *
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_03.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ограничений на количество строк справки нет, и, если их будет достаточно много, сбоку просто появится полоса прокрутки(scrollbar).&lt;/p&gt;

&lt;p&gt;С разделом «Справка» разобрались и теперь самое время перейти к параметрам плагина. Но для начала я напомню для тех, кто не в курсе, что в составе RPG Maker MV есть такая очень важная и очень удобная штука — отладчик. Вызывается он нажатием клавиши F8 во время запуска игры из редактора.&lt;/p&gt;

&lt;p&gt;Более подробно отладчик мы рассмотрим в другой раз, а сейчас мне бы хотелось остановится на вкладке «Console». Сюда будут сыпаться всякого рода ошибки, если они будут, а также можно сюда выводить отладочную информацию. Например, если в основную функцию мы добавим такой код,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(function() {
    console.log(&quot;Hello world!&quot;);
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;то в закладке «Console» мы увидим своё сообщение:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_04A.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;А если попробуем вызвать несуществующую функцию, например «abyrvalg()»:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;(function() {
    abyrvalg();
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;то получим соответствующее сообщение об ошибке:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_04B.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В правой части указано имя файла из которого произошел вызов (или случилась ошибка) «MUR_ItemsOnMap_2.js», а после двоеточия указан номер строки, в которой это случилось.&lt;/p&gt;

&lt;p&gt;Но вернёмся к настройкам плагина. В отличии от предыдущей версии, мы его немного усложним для программирования, но упростим настройку для пользователя. Поскольку наш плагин будет отображать количество предметов, которое есть в наличии у игрока, то логично будет запросить эти данные у системы (а точнее у инвентаря). Но в любом случае нам нужно вынести в настройки номер(идентификатор/ID) предмета данные о котором мы хотим отображать.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/database.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Номер предмета (или его ID) указан в рядом с названием предмета в «Базе данных» (вызывается нажатием клавиши F9) в закладке «Предметы». Дальше нам нужно сделать возможность включать и отключать отображение нашего окошка. Это можно сделать двумя способами: как и в предыдущей версии урока с помощью ключа(switch), а также с помощью вызова команды плагина. В дальнейшем мы рассмотрим оба способа, но пока зарезервируем в настройках параметр с номером ключа.&lt;/p&gt;

&lt;p&gt;Различные ситуации требуют различного положения окна на экране, для этого мы заведём ещё два параметра, это положение на экране по оси &lt;strong&gt;X&lt;/strong&gt; и положение на экране по оси &lt;strong&gt;Y&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ну и последним параметром который мы зададим, отображать ли наше окошко во время диалогов. Например, если мы зададим координаты отображения в нижней части экрана, то велика возможность наложения окна сообщений и окна с нашими данными.&lt;/p&gt;

&lt;p&gt;Пример как это было в предыдущей версии плагина, вывод во время битвы:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/glitch.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Итого у нас получилось параметров:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;itemID&lt;/strong&gt; — номер предмета в базе данных&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;showSwitchID&lt;/strong&gt; — номер переключателя, разрешающего отображение&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;positionX&lt;/strong&gt; — положение окна на экране по оси X&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;positionY&lt;/strong&gt; — положение окна на экране по оси Y&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;enableWhileMessage&lt;/strong&gt; — показывать ли при отображении окна сообщений&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;По сути нам нет необходимости «состыковывать» слова в одно, как например enableWhileMessage или писать через символ подчёркивания (enable_while_message). Мы можем писать через пробел, и система это аккуратно «скушает» и не запутается. По сути, наверное, даже можно написать на русском языке, но опять же встаёт вопрос с зарубежными пользователями. Поэтому я предлагаю писать названия на английском, а уже в разделе «Справка» давать пояснения.&lt;/p&gt;

&lt;p&gt;Для того, чтобы описать какой-либо параметр используются три ключевых слова, так же начинающихся с символа @: это &lt;strong&gt;@param&lt;/strong&gt; — наше название параметра, &lt;strong&gt;@default&lt;/strong&gt; — значение по умолчанию, а также параметр &lt;strong&gt;@desc&lt;/strong&gt; (описание), содержимое которого теперь отображается в окне где задаётся значения переменной. Так же можно описать подробности в секции &lt;strong&gt;@help&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Собрав всё воедино, получим такой код заголовка:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*:ru
 * @plugindesc Показать предметы на карте v2.0
 * @author Mur
 * @help Item ID — номер предмета в базе данных
 * Show switch ID — номер переключателя, разрешающего отображение
 * Position X — положение окна на экране по оси X
 * Position Y — положение окна на экране по оси Y
 * Enabled while message — показывать ли при отображении окна сообщений
 *
 * @param Item ID
 * @desc номер предмета в базе данных (по умолчанию 1)
 * @default 1
 *
 * @param Show switch ID
 * @desc номер переключателя, разрешающего отображение (по умолчанию 1)
 * @default 1
 *
 * @param Position X
 * @desc положение окна на экране по оси X (по умолчанию 10)
 * @default 10
 *
 * @param Position Y
 * @desc положение окна на экране по оси Y (по умолчанию 10)
 * @default 10
 *
 * @param Enabled while message
 * @desc message — показывать ли при отображении окна сообщений (по умолчанию true)
 * @default true
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;А при настройке плагина это будет выглядеть вот так:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_06.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Тоже самое нужно повторить, но уже для англоязычной секции (*:en).&lt;/p&gt;

&lt;p&gt;Для того, чтобы в нашем коде получить доступ к параметрам плагина, мы должны обратится к менеджеру плагинов и в качестве параметра передать имя файла плагина, но без расширения js:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var params = PluginManager.parameters('MUR_ItemsOnMap_2');
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее, уже у массива params мы можем запросить интересующие значение:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var itemId = params['Item ID'];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Но есть один нюанс. Все значения представляют из себя строку текста и для того, чтобы получить число или логический тип, нам придётся сделать дополнительное преобразования.&lt;/p&gt;

&lt;p&gt;Например, для того, чтобы наша переменная содержала число, а не строку, необходимо вызвать функцию &lt;strong&gt;Number&lt;/strong&gt;. И в качестве параметров передать строку:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var itemId = Number(params['Item ID']);
var showSwitchID = Number(params['Show switch ID']);
var positionX = Number(params['Position X']);
var positionY = Number(params['Position Y']);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Для того, чтобы получить логическое значение мы сравним строку на наличие слова «TRUE» (истина) и если оно указано, то наша переменная получит логическое значение — &lt;strong&gt;true&lt;/strong&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var enableWhileMessage = params['Enabled while message'].toUpperCase()==&quot;TRUE&quot;?true:false;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Какая страшная и непонятная конструкция скажете вы и будете правы, но давайте рассмотрим её подробнее.&lt;/p&gt;

&lt;p&gt;В JavaScript со строкой можно делать различные преобразования: разрезать, заменять части и другие операции. В данном примере метод «.toUpperCase()» делает все буквы большими. Например, если мы присвоим значение переменной a,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var a = &quot;abc&quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;а затем вызовем метод «.toUpperCase()»,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var b = a.toUpperCase();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;то значение переменной b станет “ABC”.&lt;/p&gt;

&lt;p&gt;Теперь для чего нам это нужно? Дело в том, что мы не знаем, как пользователь напишет значение, он может написать «true», а может и «TRUE», а может и вообще «tRuE» и в том, и в другом, и в третьем случае это будет подразумеваться одно и тоже, но строки будут не равны. Именно для этого мы приводим к единому виду «TRUE».&lt;/p&gt;

&lt;p&gt;Что же касается второй «страшной» конструкции, это сокращённая форма условия «If». Её можно записать в виде:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var enableWhileMessage;
if (params['Enabled while message'].toUpperCase() == &quot;TRUE&quot;) {
	enableWhileMessage = true;
} else {
	enableWhileMessage = false;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Согласитесь, очень громоздкая конструкция для задания значения одной переменной. Поэтому её часто заменяют такой:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var переменная = условие истины ? значение если истина : значение если ложно
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Впрочем, конечно же можно немного схитрить и задавать сразу значение false по умолчанию:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var enableWhileMessage = false;
if (params['Enabled while message'].toUpperCase() == &quot;TRUE&quot;) {
	enableWhileMessage = true;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь, для отладки, мы можем вывести в «Console» наши значения переменных и проверить, что всё в порядке:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// MUR Items On Map v2.0
//=============================================================================
/*:
 * @plugindesc Показать предметы на карте v2.0
 * @author Mur
 * @help Item ID — номер предмета в базе данных
 * Show switch ID — номер переключателя, разрешающего отображение
 * Position X — положение окна на экране по оси X
 * Position Y — положение окна на экране по оси Y
 * Enabled while message — показывать ли при отображении окна сообщений
 *
 * @param Item ID
 * @desc номер предмета в базе данных (по умолчанию 1)
 * @default 1
 *
 * @param Show switch ID
 * @desc номер переключателя, разрешающего отображение (по умолчанию 1)
 * @default 1
 *
 * @param Position X
 * @desc положение окна на экране по оси X (по умолчанию 10)
 * @default 10
 *
 * @param Position Y
 * @desc положение окна на экране по оси Y (по умолчанию 10)
 * @default 10
 *
 * @param Enabled while message
 * @desc message — показывать ли при отображении окна сообщений (по умолчанию true)
 * @default true 
*/
 
(function() {
    var params = PluginManager.parameters('MUR_ItemsOnMap_2');
 
    var itemId = Number(params[&quot;Item ID&quot;]);
    var showSwitchID = Number(params['Show switch ID']);
    var positionX = Number(params['Position X']);
    var positionY = Number(params['Position Y']);
 
    var enableWhileMessage = params['Enabled while message'].toUpperCase()==&quot;TRUE&quot;?true:false;
 
    console.log(&quot;itemId=&quot; + itemId);
    console.log(&quot;showSwitchID=&quot; + showSwitchID);
    console.log(&quot;positionX=&quot; + positionX);
    console.log(&quot;positionY=&quot; + positionY);
    console.log(&quot;enableWhileMessage=&quot; + enableWhileMessage);
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Я намеренно сокращу код, оставив только русскоязычную часть, дабы не удлинять и без того очень длинную статью.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/console_out.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Убедившись, что у нас всё отлично работает и мы забираем значения настроек правильно, мы неожиданно можем столкнуться с некоторыми трудностями. К сожалению программисты зачастую бывают очень ленивы и забывают, что пользоваться плодами их творчества будут люди далёкие от программирования. Кроме того, никто не застрахован от ошибок, очепяток итд.&lt;/p&gt;

&lt;p&gt;Что будет если мы вместо позиции X, равной 10, напишем в настройках плагина какую-нибудь белиберду в виде текста «АБЫРВАЛГ!». Вы думаете хоть кто-нибудь проверяет в своих плагинах, а что собственно туда вводят пользователи? Конечно нет! И, как и следовало ожидать, наш плагин получит ошибочное значение NaN (Not A Number - не является числом) и при дальнейшей попытке использовать значение переменной positionX вылетит с ошибкой, а бедный пользователь будет возмущаться, что ваш плагин не работает.&lt;/p&gt;

&lt;p&gt;Как же в такой ситуации быть?&lt;/p&gt;

&lt;p&gt;Понятно, что всех критических ситуаций не учесть, но в данном случае можно хотя бы проверить значения переменных на отсутствие значение NaN и вывести предупреждение на экран:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_params_error.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как это сделать мы поговорим во второй части, а пока ограничимся предупреждением в окне Console:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;    if (isNaN(itemId) || isNaN(showSwitchID) || isNaN(positionX) || isNaN(positionY)) {
        console.error('MUR Items On Map: Не верно заданы параметры плагина');
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_params_error2.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;Уже практически закончив статью и перечитывая материал ещё раз, меня заинтересовала вкладка «Текст» в окне, где задаётся значение параметра.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/plugin_06.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Мой пытливый ум сразу же решил проверить, а не может ли быть в этом месте другой тип? Например, числовой? И как показала практика достаточно задать дополнительное поле вида «@type number», чтобы стало возможным задавать цифровое значение.&lt;/p&gt;

&lt;p&gt;Но на этом моя тушка не успокоилась и стала экспериментировать ещё. Опытным путём выяснилось, что, если задать тип «@type boolean» можно будет задать значения в виде радиобатонов (Да/Нет). Но и это ещё не всё! Если задать, например, «@type item», то будет выпадающий список с предметами, где результатом будет ID выбранного предмета. А если задать «@type switch», то по клику откроется окошко со списком ключей и можно задать номер ключа.&lt;/p&gt;

&lt;p&gt;Как теперь это выглядит в коде:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*:
 * @plugindesc Показать предметы на карте v2.0
 * @author Mur
 * @help Item ID — номер предмета в базе данных
 * Show switch ID — номер переключателя, разрешающего отображение
 * Position X — положение окна на экране по оси X
 * Position Y — положение окна на экране по оси Y
 * Enabled while message — показывать ли при отображении окна сообщений
 *
 * @param Item ID
 * @desc номер предмета в базе данных (по умолчанию 1)
 * @default 1
 * @type item
 *
 * @param Show switch ID
 * @desc номер переключателя, разрешающего отображение (по умолчанию 1)
 * @default 1
 * @type switch
 *
 * @param Position X
 * @desc положение окна на экране по оси X (по умолчанию 10)
 * @default 10
 * @type number
 *
 * @param Position Y
 * @desc положение окна на экране по оси Y (по умолчанию 10)
 * @default 10
 * @type number
 *
 * @param Enabled while message
 * @desc показывать ли при отображении окна сообщений (по умолчанию true)
 * @default true
 * @type boolean
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;И как это выглядит визуально (в редакторе):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/types.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Более подробное изучение данного вопроса выявило, что, начиная с версии RPG Maker MV 1.5.0 появились дополнительные ключевые слова в параметрах.&lt;/p&gt;

&lt;p&gt;Если у вашего плагина слишком много параметров, то их можно сгруппировать, объединив командой &lt;strong&gt;@parent&lt;/strong&gt;. В нашем примере мы можем объединить X и Y позицию на экране. Для этого немного изменим структуру параметров:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @param Position
 *
 * @param X
 * @parent Position
 * @desc положение окна на экране по оси X (по умолчанию 10)
 * @default 10
 * @type number
 *
 * @param Y
 * @parent Position
 * @desc положение окна на экране по оси Y (по умолчанию 10)
 * @default 10
 * @type number
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Хочу так же обратить ваше внимание, что в этом случае немного измениться и код доступа к этим параметрам:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;    var positionX = Number(params['X']);
    var positionY = Number(params['Y']);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Так же появилась ещё одна не менее важная конструкция это &lt;strong&gt;@text&lt;/strong&gt;. Она позволяет вместо названия параметра на английском языке, выводить произвольный текст (перевод). Например:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @param Position
 * @text Положение окна на экране
 *
 * @param X
 * @parent Position
 * @text Координата X
 * @desc положение окна на экране по оси X (по умолчанию 10)
 * @default 10
 * @type number
 *
 * @param Y
 * @parent Position
 * @text Координата Y
 * @desc положение окна на экране по оси Y (по умолчанию 10)
 * @default 10
 * @type number
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Теперь вместо «Position» у нас будет выводится «Положение окна на экране», а вместо «X» — «Координата X». Примечательно, что для каждого языка можно задать свой текст и у нас решается проблема перевода названий параметров на другие языки.&lt;/p&gt;

&lt;p&gt;Про параметр &lt;strong&gt;@type&lt;/strong&gt; было уже сказано выше, дополню лишь, что могут быть ещё и другие типы:&lt;/p&gt;

&lt;p&gt;Например, с помощью «@type note», можно задать многострочный текст. Если указан &lt;strong&gt;@type&lt;/strong&gt; как number, то можно дополнительно ограничить максимальное и минимальное значение, с помощью конструкций &lt;strong&gt;@max&lt;/strong&gt; и &lt;strong&gt;@min&lt;/strong&gt;. А с помощью конструкции &lt;strong&gt;@decimals&lt;/strong&gt; можно указать количество цифр после запятой(точки), если необходимо задать более число с плавающей точкой.&lt;/p&gt;

&lt;p&gt;Например, такой код:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @param Number Example
 * @default 10.44
 * @type number
 * @decimals 2
 * @min 0
 * @max 20
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;И как это выглядит в редакторе:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/float_example.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Причём самое интересное, что с помощью стрелочек изменяется только целая часть. Дробную же надо вводить вручную.&lt;/p&gt;

&lt;p&gt;С помощью «@type file» можно сделать возможным выбор файла на диске, причём в параметре @dir можно указать путь где его искать. Например, «@dir audio/bgm/» позволит выбрать аудио файл в папке «audio/bgm/». Так же есть ещё один дополнительный параметр @require. Если его значение установлено в 1, то при экспорте проекта, выбранный файл будет так же включён.&lt;/p&gt;

&lt;p&gt;Например, такой код:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @param File Example
 * @type file
 * @dir audio/bgm/
 * @require 1
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;И как это выглядит в редакторе:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/file_example.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Помимо ранее рассмотренных @type switch и @type item, есть ещё возможность задать следующие:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;@type animation&lt;/strong&gt; — выбрать анимацию, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type actor&lt;/strong&gt; — выбрать актёра(персонажа), в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type class&lt;/strong&gt; — выбрать класс, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type skill&lt;/strong&gt; — выбрать навык, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type item&lt;/strong&gt; — выбрать предмет, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type weapon&lt;/strong&gt; — выбрать оружие, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type armor&lt;/strong&gt; — выбрать броню, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type enemy&lt;/strong&gt; — выбрать противника, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type troop&lt;/strong&gt; — выбрать сцена боя, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type state&lt;/strong&gt; — выбрать состояние, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type tileset&lt;/strong&gt; — выбрать набор тайлов, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type common_event&lt;/strong&gt; — выбрать общее событие, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type switch&lt;/strong&gt; — выбрать переключатель, в значении будет ID (номер);&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type variable&lt;/strong&gt; — выбрать переменную, в значении будет ID (номер);&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Так же в этих параметрах можно указать «@require 1» и тогда при экспорте проекта данный ресурс будет учтён.&lt;/p&gt;

&lt;p&gt;При указании типа &lt;strong&gt;@type boolean&lt;/strong&gt;, так же можно ещё переопределить название пунктов с помощью &lt;strong&gt;@on&lt;/strong&gt; и &lt;strong&gt;@off&lt;/strong&gt;. Например, в нашем случае можно локализовать так:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @param Enabled while message
 * @text показывать ли окно
 * @desc показывать ли при отображении окна сообщений (по умолчанию true)
 * @default true
 * @type boolean
 * @on отображать всегда
 * @off скрыто при сообщениях
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Так же можно создать и более сложные конструкции. Например, с помощью «@type select», «@option» и «@value», можно создать выпадающий список:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @type select
 * @option XP
 * @value 1.0
 * @option VX
 * @value 2.0
 * @option VX Ace
 * @value 2.1
 * @option MV
 * @value 3.0
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В @option задаётся название которое будет отображаться в списке, а в @value указывается значение которые сохранится в параметрах, при выборе этого пункта.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/select_example.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Если есть необходимость задать значение как в текстовом виде, так и выбрать готовое значение из списка, пригодится конструкция в виде «@type combo» и «@option»:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @type combo
 * @option XP
 * @option VX
 * @option VX Ace
 * @option MV
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Конструкция такая же, как и в случае с @type select.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/combo_example.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Если необходимо указать или выбрать несколько значений параметра, то можно создать список (List) в виде:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;@type text[]&lt;/strong&gt; — список строк&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type note[]&lt;/strong&gt; — список много строчных значений&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type number[]&lt;/strong&gt; — список чисел&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type variable[]&lt;/strong&gt; — список переменных&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type item[]&lt;/strong&gt; — список предметов&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type combo[]&lt;/strong&gt; — список выпадающих списков&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type file[]&lt;/strong&gt; — список файлов&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;@type&lt;/strong&gt; &lt;strong&gt;struct&lt;/strong&gt;&amp;lt;&lt;strong&gt;Anything&amp;gt;[]&lt;/strong&gt; — список произвольных структур&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Так же стоит учитывать, что при получении значения такого параметра, на выходе будет уже не строка, а массив нескольких значений.&lt;/p&gt;

&lt;p&gt;Вот как например выглядит код списка строк:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*
 * @param Test Array
 * @type text[]
 * 
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;и как список строк выглядит в редакторе:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/text_list_example.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ну и последнее, это возможность создавать свои, произвольные структуры:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;/*~struct~ItemAward:
 * @param Item
 * @type item
 *
 * @param Count
 * @type number
 * @min 1
 * @max 99
 * @default 1
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Последние конструкции здесь приведены больше как пример возможностей и требуют в будущем отдельного рассмотрения.&lt;/p&gt;

&lt;p&gt;В заключении как теперь выглядит финальная, на данном этапе, версия плагина:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// MUR Items On Map v2.0
//=============================================================================
/*:
 * @plugindesc Показать предметы на карте v2.0
 * @author Mur
 * @help Item ID — номер предмета в базе данных
 * Show switch ID — номер переключателя, разрешающего отображение
 * Position X — положение окна на экране по оси X
 * Position Y — положение окна на экране по оси Y
 * Enabled while message — показывать ли при отображении окна сообщений
 *
 * @param Item ID
 * @text Номер предмета
 * @desc номер предмета в базе данных (по умолчанию 1)
 * @default 1
 * @type item
 *
 * @param Show switch ID
 * @text Номер переключателя
 * @desc номер переключателя, разрешающего отображение (по умолчанию 1)
 * @default 1
 * @type switch
 *
 * @param Position
 * @text Положение окна на экране
 *
 * @param X
 * @parent Position
 * @text Координата X
 * @desc положение окна на экране по оси X (по умолчанию 10)
 * @default 10
 * @min 0
 * @max 800
 * @type number
 *
 * @param Y
 * @parent Position
 * @text Координата Y
 * @desc положение окна на экране по оси Y (по умолчанию 10)
 * @default 10
 * @type number
 *
 * @param Enabled while message
 * @text показывать ли окно
 * @desc показывать ли при отображении окна сообщений (по умолчанию true)
 * @default true
 * @type boolean
 * @on отображать всегда
 * @off скрыто при сообщениях
 *
*/
 
(function() {
    var params = PluginManager.parameters('MUR_ItemsOnMap_2');
 
    var itemId = Number(params[&quot;Item ID&quot;]);
    var showSwitchID = Number(params['Show switch ID']);
    var positionX = Number(params['X']);
    var positionY = Number(params['Y']);
 
    var enableWhileMessage = params['Enabled while message'].toUpperCase()==&quot;TRUE&quot;?true:false;
 
    if (isNaN(itemId) || isNaN(showSwitchID) || isNaN(positionX) || isNaN(positionY)) {
        console.error('MUR Items On Map: Не верно заданы параметры плагина');
    } else {
        console.log(&quot;itemId=&quot; + itemId);
        console.log(&quot;showSwitchID=&quot; + showSwitchID);
        console.log(&quot;positionX=&quot; + positionX);
        console.log(&quot;positionY=&quot; + positionY);
        console.log(&quot;enableWhileMessage=&quot; + enableWhileMessage);
    }
 
})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;И как это выглядит визуально:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/19 - Pishem svoi pervyj plagin v2.0 chast 1/f1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В заключении хочу обратить ваше внимание, что, не смотря на возможность как-то «облагородить» вводимые пользователем данные, всё так же осталась актуальна проблема ввода некорректных данных на вкладке «Текст». Например можно всё так же в координатах задать текстовое значение, а при получении данных получить ошибку в виде NaN(Not A Number).&lt;/p&gt;

&lt;p&gt;Из-за большого объёма материала и обилия примеров, написание кода плагина я перенесу во вторую часть.&lt;/p&gt;

&lt;p&gt;Готовый пример плагина с минимальным функционалом (только заголовок), можно всегда забрать на &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/MUR_ItemsOnMap_2A.js&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;dictum&quot;&gt;…продолжение следует.&lt;/div&gt;

&lt;p&gt;p.s. Надеюсь вас не слишком утомила данная «простыня».&lt;/p&gt;</content><author><name></name></author><category term="rpg maker mv" /><category term="plugins" /><category term="javascript" /><category term="story" /><category term="уроки" /><summary type="html">Немного обновлённая и исправленная версия со «Светлой Академии».</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/19%20-%20Pishem%20svoi%20pervyj%20plagin%20v2.0%20chast%201/code_title.png" /></entry><entry><title type="html">Архивация</title><link href="https://murlab.github.io/blog/Arhivacija/" rel="alternate" type="text/html" title="Архивация" /><published>2017-12-17T01:00:00+03:00</published><updated>2017-12-17T01:00:00+03:00</updated><id>https://murlab.github.io/blog/Arhivacija</id><content type="html" xml:base="https://murlab.github.io/blog/Arhivacija/">&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;Итак, процесс архивации, или если быть точнее переезда завершен. В ходе переноса были подправленные некоторые ошибки, неточности и опечатки. Так, что здесь теперь более грамотная версия материала. Старый сайт я пока тоже удалять не стану.&lt;/p&gt;

&lt;p&gt;Конечно записи за этот срок сильно устарели и по большей части представляют собой чисто историческую ценность, но тем не менее путь тоже тут побудут.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Если кому интересно, все старые записи можно найти в разделе «&lt;a href=&quot;/archive/&quot;&gt;Архив постов&lt;/a&gt;», ну или перейти прямо по ссылкам тут:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Vsem%20privet!/&quot;&gt;Всем привет!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Pishem%20svoj%20pervyj%20plagin%20dla%20RPG%20Maker%20MV/&quot;&gt;Пишем свой первый плагин для RPG Maker MV&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/&quot;&gt;Пишем плагин для отображения больших аватарок&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/Zapuskaem%20proekt%20v%20brauzere/&quot;&gt;Запускаем проект в браузере&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="archive" /><summary type="html">Всем привет!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/17%20-%20Arhivacija/book_title.png" /></entry><entry><title type="html">October, Inktober, 8bit… Octobit!</title><link href="https://murlab.github.io/blog/October,%20Inktober,%208bit...%20Octobit!/" rel="alternate" type="text/html" title="October, Inktober, 8bit... Octobit!" /><published>2017-12-11T16:28:28+03:00</published><updated>2017-12-11T16:28:28+03:00</updated><id>https://murlab.github.io/blog/October,%20Inktober,%208bit...%20Octobit!</id><content type="html" xml:base="https://murlab.github.io/blog/October,%20Inktober,%208bit...%20Octobit!/">&lt;p&gt;Иногда на меня находит, и я люблю порисовать. Этой осенью так совпало, мне захотелось, а тут подоспел некоторый челендж или «вызов» (соревнование по русски).&lt;/p&gt;

&lt;p&gt;Не для кого не секрет, что художник птица гордая, пока не пн,… гхм о чём это я. Ах да, оказывается уже не первый год, каждый октябрь происходит такое широкомасштабное мероприятие, как «&lt;a href=&quot;https://twitter.com/inktober&quot;&gt;Inktober&lt;/a&gt;».&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/Inktober.png&quot; class=&quot;imgLeft&quot; /&gt;Придумал его в 2009 году такой крутой дядька как &lt;a href=&quot;http://mrjakeparker.com/&quot;&gt;Джейк Паркер&lt;/a&gt;, а интернет его быстренько подхватил, и буквально за несколько лет оно стало массовым мероприятием. Само слово «Inktober», это вариация на тему октябрь (october) + собственно чернила (Ink).&lt;/p&gt;

&lt;p&gt;Основная идея «Inktober» это рисовать каждый день по одной картинке. Не важно, что это будет просто набросок, или что-то более серьёзное, главное рисовать, не останавливаясь и так сказать улучшать свои навыки.&lt;/p&gt;

&lt;p&gt;Для многих стало настоящим мучением, что же нарисовать? И что бы облегчить муки выбора, а заодно поощрить дух соревнования, стали предлагать задания (темы) на каждый день. Конечно авторы могут и не прислушиваться к заданной теме и творить что им заблагорассудится, но порой весьма очень интересно увидеть, как разные авторы видят одну и туже тему.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/BrunoMoraes.png&quot; class=&quot;imgRight&quot; /&gt;На ряду с обычным «Inktober», где принято рисовать в классическом стиле (карандаши, кисти, маркеры итд) на бумаге, появилась отдельная ветка «&lt;a href=&quot;https://twitter.com/search?q=%23octobit&amp;amp;src=typd&quot;&gt;Octobit&lt;/a&gt;» за авторством &lt;a href=&quot;https://twitter.com/brunopixels&quot;&gt;Бруно Мораес&lt;/a&gt; из далёкой Бразилии. Как не трудно догадаться из названия основная тема картинок в данной категории — 8бит. Или точнее всё-таки будет сказать графика, созданная на компьютере в стиле pixelart. По сути ограничений в 8 бит по цветовой палитре здесь нет, так что это скорее уже дань памяти. Так же как и в случае с «Inktober», «Octobit» это тоже вариация октября и восемь и бит, такой вот немного замудрёный ребус (:&lt;/p&gt;

&lt;p&gt;В этом году Бруно так же предложил свой список список тем. Причём самое интересное, темы разделены как бы на «мило» и «немило». Можно выбрать то, что вам ближе по духу, а можно попробовать и совместить две темы в одной картинке.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/Octobit.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Так же, как и «Inktober», «Octobit» длился 31 день и состоял из следующих тем (отдельное спасибо за подготовленный перевод Dmy со светлой):&lt;/p&gt;

&lt;p&gt;Слева от дефиса «милый вариант», справа — «не милый».&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Клоун / клоун&lt;/li&gt;
  &lt;li&gt;Космонавт / инопланетянин&lt;/li&gt;
  &lt;li&gt;Жертва / хищник&lt;/li&gt;
  &lt;li&gt;Свежее / гнилое&lt;/li&gt;
  &lt;li&gt;Максимум четыре ноги / слишком много ног&lt;/li&gt;
  &lt;li&gt;Кто-то привлекательный / человек, от которого становится не по себе&lt;/li&gt;
  &lt;li&gt;Древесный дом / город-призрак&lt;/li&gt;
  &lt;li&gt;Добрая ведьма / злая нехорошая женщина [в оригинале грубее]&lt;/li&gt;
  &lt;li&gt;Завтрак / яд&lt;/li&gt;
  &lt;li&gt;Игровая площадка / изолированный&lt;/li&gt;
  &lt;li&gt;Луна-парк / шоу уродов&lt;/li&gt;
  &lt;li&gt;Куклы / одержимость&lt;/li&gt;
  &lt;li&gt;Мультяшное / фильм-ужастик&lt;/li&gt;
  &lt;li&gt;Суши / кайдзю&lt;/li&gt;
  &lt;li&gt;Путешествие / сбитое на дороге животное&lt;/li&gt;
  &lt;li&gt;Младенцы / подростки&lt;/li&gt;
  &lt;li&gt;Флора / шипы&lt;/li&gt;
  &lt;li&gt;Чаепитие / культ&lt;/li&gt;
  &lt;li&gt;Бабочка / ураган&lt;/li&gt;
  &lt;li&gt;Радуга / монохромное&lt;/li&gt;
  &lt;li&gt;Домик из одеял / подвал&lt;/li&gt;
  &lt;li&gt;Щенок / зверское&lt;/li&gt;
  &lt;li&gt;Грибы / радиация&lt;/li&gt;
  &lt;li&gt;Крошечный домик / клаустрофобия&lt;/li&gt;
  &lt;li&gt;Кораловый риф / глубоководное море&lt;/li&gt;
  &lt;li&gt;Розовый как младенец / пепельно-серый&lt;/li&gt;
  &lt;li&gt;Торт на день рождения / старое&lt;/li&gt;
  &lt;li&gt;Костёр / городская легенда&lt;/li&gt;
  &lt;li&gt;Вздремнуть / бессонница&lt;/li&gt;
  &lt;li&gt;Старый друг / тот, кто занимается травлей&lt;/li&gt;
  &lt;li&gt;Счастливый конец / все умирают&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Многие рисовали небольшие наброски или вовсе спрайты, но мне захотелось попробовать свои силы в создании полноценных картинок. Конечно это требовало по нескольку часов в день, как на обработку самой идеи, так и на рисовку собственно самой задумки. Ну и как не трудно догадаться хватило меня не на долго, если быть точнее дней на пять. Причём всё окончательно «умерло» по причине того, что никак не удавалось найти тут самую «ноту», что бы вот все сказали: «Ух!». Работа шестого дня перерисовывалась несколько раз, а потом навалилась основная работа и банально стало не до художеств.&lt;/p&gt;

&lt;p&gt;Тем не менее я думаю вам будет интересно посмотреть, что же у меня получилось за пять дней моего короткого участия.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День первый, «Клоун»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/octobit_01A.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Вообще, мне клоуны не нравятся, да и собственно никогда не нравились. Даже в детстве мне сложно было понять радость от разукрашенных физиономий, безразмерных ботинок и взъерошенных рыжих волос, а что уж говорить про сегодняшний день. Поэтому мне было достаточно сложно выбрать, что же нарисовать. Многие конечно же кинулись сразу рисовать в пику популярности фильма «Оно». Но мне почему-то сразу вспомнился Красти из Симпсонов. Эдакий «хитро-жёлтый» предприниматель. Вечно пытается всех надурить, пренеприятнейший характер и собственно само олицетворения клоуна в моём отношении к этой братии. Возможно в жизни они и не плохие ребята, но вот у меня такое восприятие.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День второй, «Космонавт / инопланетянин»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/octobit_02.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ну тут уже моя душа как говорится понеслась в рай (: Мне захотелось совместить, как говорится два в одном. Идея картинки была придумана практически сразу. Прообраз астронавта был взят с плакатов 60х годов, о покорении космоса, а дальше захотелось добавить «сложную» ситуацию, но всё-таки с хеппи-эндом (:  В результате чего получилась такая вот неожиданная встреча, мол мы хорошие, вон цветочек принесли, хоть и тентакли XD&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День третий, « Жертва / хищник»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/octobit_03.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Идея опять совместить два в одно пришла случайно. Изначально была просто задумка нарисовать ужасную акулу, мол бойтесь. Но к сожалению, или к радости, очень долго никак не получался хвост. То он тонкий, то неестественно выгнут, в результате чего пришлось брать фото настоящей акулы и просто обрисовывать контуры &amp;gt;_&amp;lt;’ И уже в процессе обрисовки, мне вдруг пришла интересная идея, запихнуть акулу в аквариум, получилась такая картинка-вопрос, мол жертва или же хищник?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День четвёртый, «Свежее / гнилое»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/octobit_04.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;И снова я извращаюсь с идей два в одном. Идея долго не приходила, рисовать что-то банально свежее не хотелось, а уж тратить кучу времени на попытку реализовать что-то гнилое, мне тоже показалось ещё то сомнительное удовольствие. И тут уже разглядывая яблоко с коричневым бочком, мне пришла в голову сумасшедшая идея. А что если нарисовать яблоко в такой цветовой гамме, что сразу и не понять, то ли оно свежее, то ли уже сгнившее. Что получилось в итоге вы видите (:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;День пятый, «Максимум четыре ноги / слишком много ног»:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/11 - October, Inktober, 8bit... Octobit!/octobit_05.gif&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Тут у меня сомнений уже не было что рисовать. Конечно же слишком много ног, но во главе с тем, у кого ног было поменьше. Особо рассказывать об идеи тут нечего, единственное, что скажу, что я не то что бы боюсь, но скажем так не люблю пауков, поэтому при каждом удобном случает с ними контактирую, беру на руки, воспитываю так сказать в себе силу воли, хотя сердце в этот момент в пятках XD&lt;/p&gt;

&lt;p&gt;Шестой день к сожалению, не задался. Возможно когда-нибудь у меня будет ещё настроение и время и я наверстаю упущенный октябрь 2017, но, а пока на этом всё!&lt;/p&gt;

&lt;p&gt;Всем всего, ещё увидимся ;)&lt;/p&gt;</content><author><name></name></author><category term="octobit" /><category term="inktober" /><category term="8bit" /><category term="pixelart" /><category term="story" /><summary type="html">Иногда на меня находит, и я люблю порисовать. Этой осенью так совпало, мне захотелось, а тут подоспел некоторый челендж или «вызов» (соревнование по русски).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/11%20-%20October,%20Inktober,%208bit...%20Octobit!/octobit_title.png" /></entry><entry><title type="html">Godot the begining</title><link href="https://murlab.github.io/blog/Godot%20the%20begining/" rel="alternate" type="text/html" title="Godot the begining" /><published>2017-12-08T13:00:00+03:00</published><updated>2017-12-08T13:00:00+03:00</updated><id>https://murlab.github.io/blog/Godot%20the%20begining</id><content type="html" xml:base="https://murlab.github.io/blog/Godot%20the%20begining/">&lt;p&gt;Где-то примерно в середине лета мне предложили изучить такую интересную штуку как «&lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot Engine&lt;/a&gt;», тем более, что она доступна бесплатно и есть даже в &lt;a href=&quot;http://store.steampowered.com/app/404790/Godot_Engine/&quot;&gt;Steam&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;В отличии от того же RPG Maker, Godot это уже серьёзная система или как говорят «движок». Он разрабатывается сообществом Godot Engine Community и использовался внутри некоторых компаний Латинской Америки.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Среда разработчика работает на Windows, Linux, OS X, BSD и Haiku и может экспортировать игровые проекты на ПК, консоли, мобильные и веб платформы.&lt;/p&gt;

&lt;p&gt;Godot можно смело назвать конструктором конструкторов. Это своего рода коробка с кубиками Lego, с той лишь разницей, что в Lego у вас много разных кубиков, но у всех жестко заданы свойства (форма, размер, количество соединительных элементов, цвет итд). В Godot вы вольны создавать свои собственные «кубики» с какими угодно свойствами и параметрами. И самое главное, что из нескольких «кубиков» вы можете создавать новые, задавать им новые свойства, объединять или удалять, в общем всё как в настоящем программировании.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/neko_love_godot.png&quot; class=&quot;imgLeft&quot; /&gt; В Godot отличный скриптовый язык (&lt;a href=&quot;http://docs.godotengine.org/en/stable/learning/scripting/gdscript/gdscript_basics.html&quot;&gt;GDScript&lt;/a&gt;) с большими возможностями, который очень похож по синтаксису на Python. Конечно, если вы раньше никогда не занимались программированием, вам будет немного труднее разобраться, возможно стоит начать с чего-то попроще, например, с RPG Maker. Но если вы владеете хотя бы базовыми знаниями, то вы без труда (в большинстве случаев) быстро получите желаемый результат.&lt;/p&gt;

&lt;p&gt;В системе достаточно много готовых «кубиков» таких как спрайт, полигональный объект, камера итд. Но кроме этого есть так называемые модули «физических свойств». Например, можно «наделить» свой «кубик» физическими свойствами, и он будет автоматически падать вниз, до тех пор, пока не встретится с другим объектом, у которого указано, что он является поверхностью. Таким образом отпадает необходимость в проверке столкновений, система делает это автоматически.&lt;/p&gt;

&lt;p&gt;Впрочем, если вы привыкли всё контролировать самостоятельно, в Godot отличная система сообщений (event) и вы можете обрабатывать ситуацию с помощью скриптов.&lt;/p&gt;

&lt;p&gt;Но вернёмся к середине лета. Особых идей у меня не было, но лапы уже чесались и изучать систему с чего-то начинать надо. В этот момент на «&lt;a href=&quot;http://rpgmaker.su/&quot;&gt;нейтральной полосе&lt;/a&gt;» проходил конкурс и одной из номинантов была игра «&lt;a href=&quot;http://rpgmaker.su/f102/[rtp]-the-one-3511/&quot;&gt;The One&lt;/a&gt;» от Лис.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/the_one.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Игра представляла из себя квест-бродилку, с изучением комнат, предметов, поиском ответов и небольшими головоломками. События происходят в некой сумрачной «лаборатории», из-за чего многие приписали игрушке «хоррор», хотя сама автор так и не считает.&lt;/p&gt;

&lt;p&gt;Мне понравилась сама идея и как мне показалось простота в реализации. Тем более что опыта работы с 3D у меня нет, да и для ознакомления с системой 2D вполне достаточно.&lt;/p&gt;

&lt;p&gt;Игру захотелось сделать в минималистичном стиле pixelart. В результате чего появилась идея «The One: Prototype».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/the_one_prototype.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, в сети не так много русскоязычной информации на тему Godot, поэтому пришлось штудировать уроки на англоязычном &lt;a href=&quot;https://www.youtube.com/watch?v=UWB-HVFxEpU&amp;amp;list=PLS9MbmO_ssyAXRl-_ktrebQBFxjSQt7UX&quot;&gt;youtube&lt;/a&gt;. Впрочем, если вы неплохо понимаете английский и тем более программируете, это быстро  поможет разобраться в предмете вопроса.&lt;/p&gt;

&lt;p&gt;Первая «бродилка» получилась достаточно быстро. Единственным неприятным моментом, стал встроенный редактор тайлов и собственно сам редактор карты. Плюс, по умолчанию, godot сглаживает загружаемую графику и весь мой pixelart, как говорится, «поплыл».  К счастью этот режим оказался отключаемым:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/224521288&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Как альтернативу встроенному редактору можно воспользоваться редактором «&lt;a href=&quot;http://www.mapeditor.org/&quot;&gt;Tiled&lt;/a&gt;», тем более что в godot есть плагины, которые позволяют импортировать и тайлы и собственно сами карты.&lt;/p&gt;

&lt;p&gt;Вторым пунктом в реализации задуманного стал вывод текстовых сообщений. С одной стороны, мне не хотелось бы повторения всего функционала RPG Maker, а с другой, какая игра не обходится без вывода текстовых сообщений? Так проект обзавёлся &lt;a href=&quot;https://vimeo.com/224637372&quot;&gt;своим модулем&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Чуть позже система была немного доработана, появилась возможность отображать аватарку как справа, так и слева. У сообщений появился звук имитирующий речь.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/224664631&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;После реализации сообщений, встал вопрос о том, что надо как реализовать взаимодействие с окружающими нас предметами. Мне захотелось немного расширить банальную систему «тыкнись — получи сообщение» как в RPG Maker.&lt;/p&gt;

&lt;p&gt;То, что &lt;a href=&quot;https://vimeo.com/224771248&quot;&gt;получилось в итоге&lt;/a&gt; уже более менее походило на систему в квестовых играх. По задумке, взаимодействовать с любым предметом можно четырьмя способами: говорить(спросить), ударить(пнуть), осмотреть и сделать(взаимодействие).&lt;/p&gt;

&lt;p&gt;Далее был добавлен ещё один компонент «eventbox», по аналогии с «event» в RPG Maker. У него так же появилось несколько «шагов», по которым можно двигаться, и проект стал вырисовываться уже в более-менее что-то интересное:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/224862187&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;Следующим шагом стал компонент выбора варианта ответов. С одной стороны, мне хотелось чего-то оригинального, а с другой мне нравилась система в играх BioWare.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/mass_effect_select.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В результате чего была честно слямзена идея из &lt;a href=&quot;http://store.steampowered.com/app/17460/&quot;&gt;Mass Effect&lt;/a&gt; и адаптирована под pixelart стиль.&lt;/p&gt;

&lt;p&gt;Причём, что интересно, в модуле «select» можно задать количество отображаемых пунктов и оно будет выглядеть идентично натуральной игре Mass Effect:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/225305637&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;По задумке Лис, автора оригинальной «The One», приключения героини начинаются с загадки, а точнее с поиска шифра кодового замка. В шкафу спрятана одежда и его надо как-то открыть.&lt;/p&gt;

&lt;p&gt;Для реализации задуманного был создан ещё один компонент — кодовый замок.&lt;/p&gt;

&lt;p&gt;Цифры можно вводить, как управляя курсором в виде пальца, так и непосредственно нажимая кнопки на клавиатуре (в цифровой части).&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/225681952&quot; width=&quot;850&quot; height=&quot;498&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;На данном этапе разработки стала «проблемой» анимация, а точнее корявая её реализация.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/the_one_gg.png&quot; class=&quot;imgLeft&quot; /&gt; Как видно из видеороликов, в качестве гг использовался «чибик» с анимацией из RPG Maker MV. Кадров всего три, и достаточно выглядят грустно.&lt;/p&gt;

&lt;p&gt;И как оказалось, не просто подобрать временную задержку, что бы получилось более-менее вменяемое передвижение.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/player.png&quot; class=&quot;imgRight&quot; /&gt;Поэтому пришлось искать альтернативу. Взор упал на вариант слямзить кадры из RPG Maker XP.&lt;/p&gt;

&lt;p&gt;К сожалению реализация анимации в 4 кадра не сильно помогла. Там были всё же «чибики», хотя немного перерисовав персонажа, мне удалось добиться более-менее вменяемой внешности.&lt;/p&gt;

&lt;p&gt;Но тут встал другой вопрос, с анимацией ног во время перемещения вверх и вниз. Стало понятно, почему авторы RPG Maker склонялись к идее «чибиков». Рисовать при этом меньше, ног практически не видно и перемещение не выглядит столь корявым.&lt;/p&gt;

&lt;p&gt;На какое-то время всё «замёрзло», но тут мне попались кадры анимации для изометрической проекции.&lt;/p&gt;

&lt;p&gt;И как говорится «душа понеслась в рай», мне срочно захотелось попробовать вариант с изометрической проекцией:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/the_one_prototype_iso.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;На практике оказалось не всё так радужно как хотелось. Как таковой реализации изометрии в godot нет. Есть возможность несколько сместить чередование столбцов тайлов, таким образом, чтобы получилось подобие изометрии.&lt;/p&gt;

&lt;p&gt;Попытка реализация изометрии сильно поумерила пыл, и интерес несколько угас. Спустя время была ещё одна попытка разобраться с изометрией. Правда уже несколько в другом проект, и на этот раз используя не карту тайлов, а картинку в виде подложки, просто отмечая непроходимые места:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/08 - Godot the begining/loa_godot.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, на данный момент в силу жизненных вопросов изучение godot несколько приостановлено. Но я не отчаиваюсь и постараюсь всё-таки закончить начатое дело и поделится опытом создания на страницах блога.&lt;/p&gt;

&lt;p&gt;Ну а пока, если вам интересно, вы можете скачать проект «&lt;a href=&quot;https://github.com/murlab/the-one-prototype&quot;&gt;The One: prototype&lt;/a&gt;» для самостоятельного изучения модулей. Либо запустить &lt;a href=&quot;https://github.com/murlab/the-one-prototype/raw/master/releases/the_one_pro_alpha_1.exe&quot;&gt;демку&lt;/a&gt; и немного побегать по локациям лаборатории. Так же можно ещё глянуть самую первую мою попытку сделать что-нибудь на godot — &lt;a href=&quot;https://github.com/murlab/the-one-prototype/raw/master/releases/the_one_pro_title_test.exe&quot;&gt;титульное меню&lt;/a&gt; (:&lt;/p&gt;

&lt;p&gt;Сим не прощаюсь, ещё увидимся.&lt;/p&gt;

&lt;p&gt;ps. Проверено на VirusTotal — вирусов нет:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virustotal.com/#/file/91237b44e723b053b5ec8d0b4f304c418acd0ad1c70ef2a2c0cdd015a4cc890d/&quot;&gt;the_one_pro_alpha_1.exe&lt;/a&gt; ~16Mb&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virustotal.com/#/file/5167a0b2e29c89f764d6aa0ce0a0207cf202d3fb2b6dc7585047f64fc397bd2d&quot;&gt;the_one_pro_title_test.exe&lt;/a&gt; ~16Mb&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="godot engine" /><category term="lis" /><category term="the one" /><category term="pixelart" /><category term="the one prototype" /><category term="story" /><summary type="html">Где-то примерно в середине лета мне предложили изучить такую интересную штуку как «Godot Engine», тем более, что она доступна бесплатно и есть даже в Steam.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/08%20-%20Godot%20the%20begining/godot_title.png" /></entry><entry><title type="html">Let’s GO!!</title><link href="https://murlab.github.io/blog/Let's%20GO!!/" rel="alternate" type="text/html" title="Let's GO!!" /><published>2017-12-06T23:59:59+03:00</published><updated>2017-12-06T23:59:59+03:00</updated><id>https://murlab.github.io/blog/Let's%20GO!!</id><content type="html" xml:base="https://murlab.github.io/blog/Let's%20GO!!/">&lt;p&gt;Как говаривал не безызвестный Чебурашка, «Мы строили, строили и наконец построили ;)&lt;/p&gt;

&lt;p&gt;Блуждая по интернету, я периодически задумываюсь о том, что очень классно было бы где-нибудь наконец осесть, да и записать все свои мысли.&lt;/p&gt;

&lt;p&gt;И надо отдать должное у меня даже были некоторые попытки реализовать задуманное на практике.
Изначально это были записи в закрытом кругу google+, по большому счёту из-за того, что там больше размещались скриншоты и различные записи, как говорится «для своих». Это были самые тёплые, хотя и порой весьма «кусачие» отзывы, но конечно бесценно полезные.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Затем была попытка завести блог на различных «условно бесплатных» сервисах. Не буду утомлять вас перечислением того, что мне там не нравилось, скажу лишь, что основная проблема — это дизайн, а точнее отсутствие возможности оформить сайт как того хочется.&lt;/p&gt;

&lt;p&gt;Но были и положительные моменты. Например, на сайте wordpress до сих пор появляются свежие комментарии с благодарностями, следовательно, материал востребован, и я двигаюсь в нужном направлении.
И вот в одном из комментариев, мне подсказали идею, которая вылилась в размещении всего этого безобразия на &lt;a href=&quot;https://pages.github.com&quot;&gt;pages.github.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/06 - Let's GO!!/professortocat.png&quot; class=&quot;imgLeft&quot; /&gt;Чем же меня так заинтересовал именно этот сайт?&lt;/p&gt;

&lt;p&gt;Ну само собой понятно, что он бесплатный, причём что важно без приставки «условно», он правда бесплатный. То есть на сайте нет ни встраиваемой рекламы, ни жучков, ни какой-либо другой гадости. Потому что на сайте вы размещаете чисто странички html. Как вы их создали у себя на компьютере, так они и будут выглядеть.
Возможно, многие выскажут своё «Фе!», но положа руку на сердце, скажите, а оправдано ли, что при каждом обращении на сайт страница создаётся заново? Так ли это прямо необходимо? Если это какой-нибудь форум, чат или сайт с динамической информацией, как например сервис по состоянию серверов «&lt;a href=&quot;https://steamstat.us/&quot;&gt;Steam Status&lt;/a&gt;», возможно. Но если это нечасто обновляемый ресурс, то думаю, что такой уж острой необходимости в этом нет. А вот скорость загрузки таких страничек намного выше. «Но позвольте, а как же блог или магазин, я что буду каждую страничку создавать вручную?» А вот тут на помощь приходит такая крутая штука, как &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;. Её написали те же ребята, что и создали &lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/06 - Let's GO!!/jekyll_logo.png&quot; class=&quot;imgRight&quot; /&gt;Jekyll это целый «комбайн», который является локальным сервером для тестирования. Он позволяет по шаблонам автоматически создавать новые страницы, вставлять внутрь шаблонов другие кусочки. Так же он поддерживает язык шаблонов &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/liquid-for-designers&quot;&gt;Liquid&lt;/a&gt;, что раскрывает поистине широкие возможности для создания страниц.
Сам Jekyll написан на Ruby. Если вам недостаточно возможностей Liquid, то можно создать свои плагины и генерировать вообще что душе угодно, ну конечно в пределах разумного ;)
Если будет интересно, я могу рассказать более подробно об этой системе, те более, что мне удалось даже написать парочку своих плагинов.&lt;/p&gt;

&lt;p&gt;К слову, чем меня так ещё не утраивала возможность создавать свой дизайн, так это отсутствием возможности по-человечески оформить примеры кода. Сейчас с этим полный порядок, во многом благодаря, такой классной штуке как &lt;a href=&quot;https://highlightjs.org/&quot;&gt;highlightjs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Например, так выглядит код на javascript:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;// Пример комментария 1
function init() {
  navbar = document.getElementById(&quot;navbar&quot;);
  sticky = navbar.offsetTop;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;А вот так выглядит код на ruby:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;module Jekyll
  # this class is used to tell Jekyll to generate a page
  class DataPage &amp;lt; Page
    def initialize(site, base, index_files, dir, data, name, template, extension)
      @site = site
      @base = base
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Но вернёмся к github. Чистый html хорош ещё тем, что можно размещать web-версию проекта того же RPG Maker или любого другого конструктора и показывать работоспособность online. Раньше для этих целей приходилось городить целый огород, например, с тем же google disk. Но начиная с 2015 года, google прекратил предоставлять доступ и в любом случае пришлось бы искать что-то другое.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/06 - Let's GO!!/github_desktop.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Так же немаловажной причиной выбора &lt;a href=&quot;https://pages.github.com&quot;&gt;pages.github.com&lt;/a&gt;, стала интеграция его с сервисом контроля версий &lt;a href=&quot;https://github.io/&quot;&gt;github.io&lt;/a&gt;. Конечно, у людей далёких от программирования, могут возникнуть сложности. Однако всё не так страшно, как может показаться на первый взгляд. Существует очень удобная понятная программа &lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt; и при случае я постараюсь рассказать более подробно как ей пользоваться, как зарегистрироваться на сервисе и соответственно завести свою страничку.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/06 - Let's GO!!/saritocat.png&quot; class=&quot;imgLeft&quot; /&gt;Ну в завершении этой небольшой вводной заметки, собственно для чего это всё, и что ожидать тут в будущем?
Вообще изначально у меня была задумка просто создать игрушку с помощью RPG Maker. Затем аппетиты быстро начали расти, захотелось и того и сего, и всего побольше. Конечно для того же &lt;a href=&quot;http://www.rpgmakerweb.com/products/programs/rpg-maker-vx-ace&quot;&gt;RPG Maker VX Ace&lt;/a&gt; было написано не мало скриптов, которые позволяли реализовать задуманное, но часто случались ситуации, когда скрипты конфликтовали, когда что-то хотелось сделать немного по-другому или просто дополнить.&lt;/p&gt;

&lt;p&gt;Так пришло осознание в необходимости самостоятельно разбираться в скриптах. В VX Ace они были написаны на Ruby. Честно скажу, не самый простой язык для знакомства с программированием. Было не просто, очень много чего не понятно, и чисто на упорстве и с помощью знакомых, удалось немного сдвинуться с мёртвой точки. Как пример моих многозначительных страданий первый и последний плагин «Ace Shop Options Add-on - Items States». Конечно были ещё всякие мелкие доделки, исправления итд. Возможно я о них ещё тоже расскажу.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/06 - Let's GO!!/yakuza.png&quot; class=&quot;imgRight&quot; /&gt;С появлением &lt;a href=&quot;http://www.rpgmakerweb.com/products/programs/rpg-maker-mv&quot;&gt;RPG Maker MV&lt;/a&gt;, появилась необходимость разбираться уже с JavaScript. JS в отличии от того же Ruby мне показался более дружелюбным, интуитивно понятным по синтаксису. С ним у нас можно сказать прямо любовь (: Написано не мало различных плагинов, о которых я конечно же ещё расскажу.&lt;/p&gt;

&lt;p&gt;Немногим позже мне понадобилось разобраться в одном скрипте на Python &amp;gt;_&amp;lt;’ так открылась ещё одна грань в моём изучении чего-то нового, непонятного, но ужасно интересного. В будущем мне это сильно пригодилось при изучении Godot, ведь его скрипты очень схожи по синтаксису с Python.&lt;/p&gt;

&lt;p&gt;О &lt;a href=&quot;https://godotengine.org/&quot;&gt;Godot&lt;/a&gt; можно рассказывать много и бесконечно. Это как катаясь по кругу на пони, вдруг вырваться и носиться по полю. Да он не прост, и новичкам будет многое сложно и не понятно, но после RPG Maker, это действительно свобода действий. Осталось только понять, а чего собственно я хочу? (:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2017.12/06 - Let's GO!!/kot_obormot.png&quot; class=&quot;imgLeft&quot; /&gt;Ну вот собственно и всё. Ах да, иногда на меня находит вдохновение, и я рисую. Собственно, это тоже будет по возможности пролетать тут, ну по крайней мере я на это надеюсь.&lt;/p&gt;

&lt;p&gt;Пару заметок по сайту. На панельку (ввверху) вытащены «основные» ссылки, на мой взгляд, на важные разделы. Записи в этих разделах будут отображаться и в основной ленте блога, просто они туда вынесены для быстрого доступа. Например, если выбрать «графика», то будут отфильтрованы посты на тему моих картинок, если «rpg maker», то всё что связано с ним итд.&lt;/p&gt;

&lt;p&gt;Слева есть ещё выпадающее меню [≡], в котором так же продублированы основные фильтры, а также некоторые другие пункты. Например, раздел «Архив», куда я утяну старые свои записи, не будет отображаться в основной ленте блога.&lt;/p&gt;

&lt;p&gt;Так же в нём есть ссылка на раздел с материалами для скачивания. Есть ещё раздел тегов, и список материалов с этими метками. Ну и конечно куда же современному сайту без RSS-ленты, конечно же не без помощи Jekyll. В общем много чего ещё интересного. Подписывайтесь и оставляйте отзывы.&lt;/p&gt;

&lt;p&gt;Не прощаюсь, ещё увидимся.&lt;/p&gt;</content><author><name></name></author><category term="web" /><category term="blog" /><summary type="html">Как говаривал не безызвестный Чебурашка, «Мы строили, строили и наконец построили ;)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/06%20-%20Let's%20GO!!/github_logo.png" /></entry><entry><title type="html">Запускаем проект в браузере</title><link href="https://murlab.github.io/blog/Zapuskaem%20proekt%20v%20brauzere/" rel="alternate" type="text/html" title="Запускаем проект в браузере" /><published>2015-11-06T01:00:00+03:00</published><updated>2015-11-06T01:00:00+03:00</updated><id>https://murlab.github.io/blog/Zapuskaem%20proekt%20v%20brauzere</id><content type="html" xml:base="https://murlab.github.io/blog/Zapuskaem%20proekt%20v%20brauzere/">&lt;p&gt;&lt;strong&gt;Обновление от 2 февраля 2017 года&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;warning&quot;&gt;&lt;i class=&quot;fa fa-exclamation-triangle&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;
Спешу вам сообщить, что, начиная с 31 августа 2015 года поддержка доступа к google disk как web-сервису (описанного в данной статье) более не доступна.&lt;/div&gt;

&lt;p&gt;«&lt;em&gt;Beginning August 31, 2015, web hosting in Google Drive for users and developers will be deprecated. Google Apps customers can continue to use this feature for a period of one year until August 31, 2016, when serving content via googledrive.com/host/doc id will be discontinued.&lt;/em&gt;»&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;Сегодняшний мини-урок мне бы хотелось посвятить запуску нашей игры, созданной с помощью RPG Maker MV в браузере.&lt;/p&gt;

&lt;p&gt;Для чего это может понадобится? Ну помимо того, что вы можете просто показать друзьям, можно, например, сделать демоверсию и разместить у себя на сайте для привлечения внимания. Возможно вы захотите разместить игру во «ВКонтакте». Но самое интересное, если у вас есть команда поддержки (бетатестеры) они оперативно могут видеть новые версии, играть и сообщать о всех найденных ошибках и недочётах.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Но как нам это сделать? Ведь в документации RPG Maker MV говорится о сложных манипуляциях с установкой и запуском локального сервера, или же для размещения в сети, потребуется свой. На самом деле не всё так страшно как кажется на первый взгляд, и ничего ставить не придётся. Собственно, об этом мне бы и хотелось сегодня поговорить.&lt;/p&gt;

&lt;p&gt;Не так давно, один знакомый поделился ссылкой на интересную статью, о том, как разместить свою игру на HTML5 во «Вконтакте». Прочитав её, мне пришла мысль, а применимо ли это к нашему проекту? И как вы уже догадались у меня всё получилось, с чем я и спешу поделится с вами.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/2.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как вы уже, наверное, заметили, проект для RMMV представляет собой кучу различных файлов в текстовом виде. Не буду углубляться в подробности, но нас интересует главный файл index.html Но если мы попытаемся его открыть в браузере, то получим сообщение об ошибке.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/3.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;К сожалению, библиотеки RPG Maker MV написаны таким образом, что не могут работать локально, так что же делать? Умные люди уже всё придумали за нас и нам на помощь спешит,… нет не мистер Пропер :) а гугл драйв.&lt;/p&gt;

&lt;p&gt;Если вы ещё не зарегистрированы в таких сервисах гугл, gmail или youtube настоятельно рекомендую это сделать, а всем остальным перейти непосредственно к настройкам в &lt;a href=&quot;https://drive.google.com/&quot;&gt;google drive&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Для того что бы наш проект был доступен всем в интернете нам необходимо создать папку и выставить к ней доступ.&lt;/p&gt;

&lt;p&gt;Создадим папку «www». В принципе вы можете назвать её как угодно, на дальнейших настройках это никак не скажется. Выбираем папку нажимаем пиктограмму:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/4.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/5.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;В открывшемся окошке мы видим строчку, от которой нам понадобится подчёркнутая часть из букв и цифр, поэтому её лучше куда-нибудь скопировать, а пока открываем настройки дальше, нажав «расширенные»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/6.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Здесь мы видим всю туже строку, но напротив «Документ доступен для…» нажимаем «Изменить»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/7.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;И теперь уже точно выбираем, что —наш документ— наша папка будет доступна всем в интернете. Это очень важный момент, если где-то ошибиться и неправильно настроить доступ мы получим ошибки или вообще просто чёрный экран без каких-либо сообщений. Сохраняем и приступаем к подготовке нашего проекта для загрузки.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/8.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как видно из скриншота, наш тестовый проект (даже «пустой») изначально очень большой. Достаточно много файлов и папок. Конечно если у вас хороший и быстрый интернет и не сильно тревожит свободное место на гугл драйв, то последующие шаги вы можете смело пропустить. Но тем не менее, я предлагаю проект немного предварительно «почистить».&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/9.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для этого скопируем нашу папку с проектом в отдельное место и откроем папку audio. В ней мы увидим ещё несколько папок: bgm, bgs, me и se. Зайдя в каждую мы увидим файлы звуков и музыки в двух форматах. Один из них это OGG, который используется в Windows, а также в web, а другой формат m4a. Файлы в формате m4a используются в компьютерах Apple, а также в iPhone. Поскольку наш проект будет только для интернета, то файлы звуков m4a мы смело удаляем.&lt;/p&gt;

&lt;p&gt;В принципе, если вы не планируете выпускать игру для компьютеров Apple вы можете их удалить и из основного проекта. В любом случае они останутся в папке RPG Maker MV(&lt;strong&gt;*Steam\steamapps\common\RPG Maker MV\NewData*&lt;/strong&gt;), на основе которой создаются все новые проекты. Так же можно удалить файл «Game.rpgproject», который находится рядом с «index.html». Он используется для открытия проекта в самом редакторе RPG Maker. &lt;strong&gt;Не удаляйте его, если вы не делали копию данного проекта!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Если вы так уж сильно придирчиво относитесь к размеру и понимаете, что делаете, то можете смело удалить не используемые звуки и в формате OGG, а также некоторую графику из папки img. Но мы этого делать не будем и посмотрим на результат:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/10.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Хоть и незначительно, но проект стал поменьше и настало время загрузить наши файлы в Google Drive. Для этого заходим в нашу папку www в гугл драйв и закачиваем проект.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/11.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Если у вас браузер Google Chrome, то вы можете просто перетянуть все папки и файлы прямо из проводника. Если же нет, тогда можно либо перетягивать всё по одному файлу, либо установить программу для синхронизации Google Drive, а можно запаковать все файлы в архив и уже распаковать на сайте Google Drive с помощью сторонних сервисов, например, «CloudConvert»:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/12.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;После того, как все наши файлы будут закачаны или распакованы из архива, у нас должна получится вот такая картина:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/13.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Теперь настало время вспомнить про строчку, о которой говорилось в начале.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/06 - Zapuskaem proekt v brauzere/14.jpg&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Для того, чтобы наша папка открылась как страничка, нужно взять и дописать после https:// путь к googledrive.com/host/ а затем уже наш буквенно-цифровой код. Полученный адрес и будет ссылаться на наш проект с игрой.&lt;/p&gt;

&lt;p&gt;https://googledrive.com/host/0B-q89LL1IWimeDZoZnlUV0lkRDQ&lt;/p&gt;

&lt;p&gt;Если вы сделали всё правильно, то через несколько секунд ваша игра должна загрузиться. Если же что-то пошло не так, попробуйте ещё раз пройтись по всем этапам: доступ к файлам, правильность расположения файлов и собственно наличие всех необходимых файлов проекта на своих местах.&lt;/p&gt;

&lt;p&gt;Ссылкой можно поделится с друзьями или разместить игру во «ВКонтакте». Как это сделать можно узнать уже из инструкции в оригинальной статье (ссылка чуть ниже).&lt;/p&gt;

&lt;p&gt;И да, вот ещё что. У вас, наверное, может возникнуть вопрос «не противоречит ли условиям использования Google Drive размещение контента с такой целью»? Спешу вас обрадовать, оказывается нет:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Skaner:
Гугл положительно относится к такой возможности, более того, даже у них самих есть инструкция по запуску html файлов в общем доступе. ---Вырезка из технической поддержки---.

Единственное, что, если ваша игра/приложение будет иметь большую популярность, и, как следствие — требовать больших мощностей из-за обилия запросов, лучше обзавестись собственным сервером с SSL.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;На этом разрешите откланяться и пожелать удачи в ваших проектах! =^‿~=&lt;/p&gt;</content><author><name></name></author><category term="archive" /><category term="rpg maker mv" /><category term="story" /><category term="уроки" /><summary type="html">Обновление от 2 февраля 2017 года:</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/06%20-%20Zapuskaem%20proekt%20v%20brauzere/browser_title.png" /></entry><entry><title type="html">Пишем плагин для отображения больших аватарок</title><link href="https://murlab.github.io/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/" rel="alternate" type="text/html" title="Пишем плагин для отображения больших аватарок" /><published>2015-11-05T02:00:00+03:00</published><updated>2015-11-05T02:00:00+03:00</updated><id>https://murlab.github.io/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok</id><content type="html" xml:base="https://murlab.github.io/blog/Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/">&lt;p&gt;Всем привет!&lt;/p&gt;

&lt;p&gt;С вами опять я, и мои очумелые ручки вновь не дают мне покоя. Ну и собственно по этой причине я спешу поделиться с вами своим новыми изысканиями.&lt;/p&gt;

&lt;p&gt;Изыскивать мы сегодня будем как с помощью нескольких изменений, вывести на экран большие аватарки. На подобии «&lt;a href=&quot;https://galvs-scripts.com/2012/12/01/message-busts/&quot;&gt;Message busts&lt;/a&gt;» от &lt;a href=&quot;https://galvs-scripts.com/&quot;&gt;Galv&lt;/a&gt;. Стой лишь разницей, что у него скрипт написан для VX Ace, ну а мы соответственно будем изыскивать для RPG Maker MV.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Для начала общая идея, как я себе это представляю:
В обычном редакторе текстовых диалогов, мы выбираем файл с группой аватаров, выбираем один из них и задаём текст сообщения. Всё как обычно.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/05 - Pishem plagin dla otobrazhenia bolshih avatarok/4.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Затем, находим место где выводится на экран аватарка. Изменяем скрипт на то что нам нужно, а именно выбрать картинку из папки img\bigfaces\ загрузить её вместо стандартной и вуаля, всё готово. На практике оказалось не всё так просто. Дело в том, что размеры окна (в данном случае с текстом сообщения) жестко задают границы и если попробовать загрузить другую (большую) картинку, то всё что попадает за пределы окна попросту обрезается.&lt;/p&gt;

&lt;p&gt;Довольно неожиданно, но мысль не давала мне покоя. Ну хорошо, а что, если нам сделать новое своё окошко, убрать к примеру все декорации, и загрузить в него нашу большую картинку. Отличная идея, как мне тогда казалось, но не совсем,… Да, новое большое окно у меня получилось вывести, но тут меня ждало разочарование. Дело в том, что как только новое окно перекрыло часть окна с сообщением, всё что находилось под ним попросту исчезло.&lt;/p&gt;

&lt;p&gt;Мдяя,… как говорится, а праздник был близко. Ну что ж, мы не отчаиваемся и самое время перестать маяться дурью и наконец посмотреть, а как же эту проблему решает Galv в своём скрипте? Всё оказалось просто. Скрипт, который выводит обычную аватарку убирается, а вместо него с помощью Sprite спокойно отображается картинка поверх всех окошек. Алллилуйя! Вот оно!&lt;/p&gt;

&lt;p&gt;Итак, идея ясна, осталось только всё сделать.&lt;/p&gt;

&lt;p&gt;Начнём мы, как и в прошлый раз с описания нашего скрипта. На деталях я останавливаться уже не стану, скажу только, что нам понадобится одна переменная в настройках, а именно сколько отступить тексту с левого края. Картинки у нас большие и если оставить настройки по умолчанию, то текст будет накладываться поверх персонажа, что не всегда хорошо читается. Впрочем, кто-то может в этом узреть особенность дизайна.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/05 - Pishem plagin dla otobrazhenia bolshih avatarok/1.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Начало нашего скрипта:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;//=============================================================================
// BigAvatar.js
//=============================================================================

/*:
* @plugindesc показывает большую аватарку
* @author Mur
*
* @param avatarWidth
* @desc padding for text
* @default 320
*
*/

(function() {

var parameters = PluginManager.parameters(‘BigAvatar’);
var avatarWidth = Number(parameters[‘avatarWidth’]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Прочитаем в переменную avatarWidth ширину нашей большой картинки, или точнее сколько нам отступать.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var spr = new Sprite();
var bitmap;
var sprPosX;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее подготовим несколько переменных: &lt;strong&gt;&lt;em&gt;spr&lt;/em&gt;&lt;/strong&gt; это собственно наш спрайт с которым мы будем работать дальше; &lt;strong&gt;&lt;em&gt;bitmap&lt;/em&gt;&lt;/strong&gt; — сюда мы будем загружать нашу большую картинку и затем копировать в спрайт; &lt;strong&gt;&lt;em&gt;sprPosX&lt;/em&gt;&lt;/strong&gt; — это положение нашего спрайта на экране. Забегая немного вперёд скажу, что мне захотелось не просто вывести картинку на экран — БАМЦ! а что бы она плавно выезжала из-за края экрана. Но обо всём по порядку.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Message.prototype.newLineX = function() {
	return $gameMessage.faceName() === '' ? 0 : avatarWidth;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь мы указываем наш отступ для текста, если аватар не указан, то отступ равен 0. В противном случает отступ для текста устанавливается из нашей переменной &lt;strong&gt;&lt;em&gt;avatarWidth&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Base.prototype.drawFace = function(faceName, faceIndex, x, y, width, height) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее собственно то место, где рисуется аватарка персонажа, который говорит наш текст.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;if (faceName != '') {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Проверяем, а задано ли название аватара, который нам нужно отобразить. Уж не знаю или моя ошибка, или где-то кто-то что-то пропустил, но мы сюда иногда попадаем с пустым именем. В результате чего ошибка на экране и «поезд дальше никуда уже не идёт».&lt;/p&gt;

&lt;p&gt;Если имя не задано, то просто ничего не делаем.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;if (spr.bitmap) {
	this.removeChild(spr);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Вот тут очень важный и интересный момент. Если у нас уже была загружена картинка (мы сюда попали не первый раз), то нужно убрать старый спрайт с экрана. Поскольку если этого не сделать на экране будет каша, все наши картинки начнут накладываться одна на другую.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;bitmap = ImageManager.loadBitmap('img/bigfaces/' + faceName + '/', faceIndex+1, null, true);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее мы загружаем картинку. ‘img/bigfaces/’ — место где лежат наши большие аватарки. &lt;strong&gt;&lt;em&gt;faceName&lt;/em&gt;&lt;/strong&gt; это название файла с 8ю маленькими аватарками, который мы использовали при составлении текста. Но в данном случае это будет ещё одна папка, где будут лежать наши 8 больших картинок с номерами от 1 до 8. &lt;strong&gt;&lt;em&gt;faceIndex+1&lt;/em&gt;&lt;/strong&gt; это собственно уже название нашей картинки которую мы хотим загрузить. +1 потому что счёт у них не с 1, а 0. и «.png» не нужно добавлять, так как система сама это сделает за нас.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/05 - Pishem plagin dla otobrazhenia bolshih avatarok/5.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Как видно из рисунка, «Тест» название нашего проекта «img\bigfaces» это где хранятся наши картинки «Package1» одноимённое название файла с аватарами и дальше собственно от 1 до 8 картинки.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var face = this;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Об этом чуть ниже.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;bitmap.addLoadListener(function() {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Далее очень важный момент. Поскольку картинка не может загрузится мгновенно, нам нужно написать специальную нашу функцию, которая будет вызвана после того, как картинка будет загружена. Если этого не сделать на экране мы в лучшем случае не получим ничего, а в худшем случае ошибку.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;spr.bitmap = new Bitmap(bitmap.width, bitmap.height);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;После того, как картинка загружена, нам нужно её скопировать в спрайт. Для этого создадим пустую картинку в спрайте точно такими же размерами, как у вновь загруженной картинки.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;spr.bitmap.blt(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Затем копируем загруженную картинку &lt;strong&gt;&lt;em&gt;bitmap&lt;/em&gt;&lt;/strong&gt; в спрайт &lt;strong&gt;&lt;em&gt;spr&lt;/em&gt;&lt;/strong&gt;. Первые два числа (0,0) это координаты в нашей картинке, например, если мы хотим скопировать не всю, а только часть. Далее два числа (&lt;strong&gt;&lt;em&gt;bitmap.width&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;bitmap.height&lt;/em&gt;&lt;/strong&gt;) это собственно размер нашей копируемой картинки. Ну и последние два нуля это место куда мы хотим вставить нашу картинку в спрайт.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;sprPosX = -(bitmap.width);
spr.x = sprPosX;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Здесь мы указываем начальную координату &lt;strong&gt;&lt;em&gt;X&lt;/em&gt;&lt;/strong&gt; для нашего спрайта. Как уже сказано выше, у меня есть задумка сделать так, чтобы спрайт появлялся не сразу на экране, а выезжал из-за границы экрана. Поэтому тут отрицательное число равное ширине нашей загруженной картинки.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;spr.y = -(bitmap.height - face.height);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В этом месте задаётся вертикальное положение на экране, координата &lt;strong&gt;&lt;em&gt;Y&lt;/em&gt;&lt;/strong&gt;. Координата 0, как может показаться это не верхний левый угол экрана, а координата относительно нашего окна с текстом. Поэтому для того, чтобы «выскочить» за его границы нам так же нужно задать отрицательное число. Для этого берём высоту нашей картинки, уменьшаем её на высоту обычной аватарки и зададим координату Y.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;face.addChildToBack(spr);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ну и теперь главный момент. Собственно, надо «прикрепить» наш спрайт к окну с сообщением. Возможно есть способ лучше, и EvilCat меня поправит, но ничего лучше мне не пришло в голову. По идеи здесь должно быть написано было &lt;strong&gt;&lt;em&gt;this.addChildToBack&lt;/em&gt;&lt;/strong&gt;, но поскольку &lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt; у нас внутри нашей функции уже указывает на &lt;strong&gt;&lt;em&gt;bitmap&lt;/em&gt;&lt;/strong&gt;, то мы получим ошибку. Поэтому тут как бы такая вот странная конструкция, мы сохраняем в &lt;strong&gt;&lt;em&gt;face&lt;/em&gt;&lt;/strong&gt; наш старый &lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt; на окошко, а затем просим систему добавить к нему спрайт.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;}.bind(bitmap));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Заканчивается загрузка картинки такой вот странной конструкцией. С радостью послушаю EvilCat для чего оно нужно, но скажу одно этот момент у меня очень много крови попил и заставил вчера просидеть аж почти до 4х утра. Пока не попался другой пример, с таким вот «хвостом». Уже отчаявшись, копирую этот кусочек и о чудо! Загрузка картинок заработала, иначе получались пустые файлы.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;    }
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Закрываем нашу проверку пустого имени и собственно всей функции.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var _Window_Base_close = Window_Base.prototype.close;
Window_Base.prototype.close = function() {
	_Window_Base_close.call(this);
	this.removeChild(spr);
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Этот кусочек не менее важен чем другие и отнял у меня тоже достаточно много времени. Дело в том, что, когда мы загружаем картинки постепенно по мере открытия новых диалогов, всё красиво и прекрасно. Но если обратится к НПЦ ещё раз, на доли секунды на экране появляется старая (последняя) картинка, прежде чем успевает загрузится новая. Это не очень красиво, и логично было бы удалять наш спрайт с экрана, после закрытия окна с текстом.&lt;/p&gt;

&lt;p&gt;Думаю, комментарии тут излишни. Так же как и в первом уроке мы «дублируем» основную функцию системы &lt;strong&gt;&lt;em&gt;Window_Base.prototype.close&lt;/em&gt;&lt;/strong&gt; и добавляем после всех основных команд системы, команду удалить наш спрайт с экрана &lt;strong&gt;&lt;em&gt;this.removeChild(spr)&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;var _Window_Base_update = Window_Base.prototype.update;
Window_Base.prototype.update = function() {
	_Window_Base_update.call(this);
	if (sprPosX &amp;lt;0) {
		sprPosX += 5;
		spr.x = sprPosX;
	}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ну и осталась ещё одна функция, которая будет двигать наш спрайт из-за экрана до тех пор, пока координата &lt;strong&gt;&lt;em&gt;X&lt;/em&gt;&lt;/strong&gt; не будет равна 0.&lt;/p&gt;

&lt;p&gt;Так же как и с предыдущей функцией, мы делаем «дубликат» системной функции &lt;strong&gt;&lt;em&gt;Window_Base.prototype.update&lt;/em&gt;&lt;/strong&gt;. После того как отработает система, мы проверяем координату &lt;strong&gt;&lt;em&gt;X&lt;/em&gt;&lt;/strong&gt; нашего спрайта, и если она меньше 0, то увеличиваем её на 5 точек. Никаких дополнительных действий для загрузки изображения не требуется, достаточно обновить координату спрайта &lt;strong&gt;&lt;em&gt;spr.x&lt;/em&gt;&lt;/strong&gt; и оно сместиться на новое место автоматически.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;})();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;На этом всё, закрываем основную функцию нашего плагина и отправляемся тестировать.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/05 - Pishem plagin dla otobrazhenia bolshih avatarok/3.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Стоит обратить внимание, что получившийся у нас плагин это всего лишь маленькая не законченная часть. Вывод аватара используется в совершенно неожиданных местах. И если, например, при отображении результатов битвы или списка персонажей в меню, это ещё не так фатально выглядит:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/05 - Pishem plagin dla otobrazhenia bolshih avatarok/6.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;то при выборе, например, экипировки:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images.posts/2015.11/05 - Pishem plagin dla otobrazhenia bolshih avatarok/7.png&quot; class=&quot;imgCenter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;уже выглядит не столь оптимистично.&lt;/p&gt;

&lt;p&gt;Понятно, что все эти нюансы ещё стоит учесть. Но минимальную задачу мы на сегодня выполнили. Разобрались как устроен вывод аватарок. Как загрузить свою картинку в спрайт и вывести на экран. И собственно, как сделать минимальную анимацию (выезд картинки из-за края экрана).&lt;/p&gt;

&lt;p&gt;На этом всё. Всем спасибо за внимание и до новых встреч. В следующий раз думаю мы ещё что-нибудь интересное расковыряем ;)  Удачи!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Небольшое обновление&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;

&lt;p&gt;Для того, чтобы большие аватарки показывались только в сообщениях, собственно и нужно «трогать» только функцию сообщений, а не вообще всех аватарок.&lt;/p&gt;

&lt;p&gt;Поэтому вместо кусочка:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Base.prototype.drawFace = function(faceName, faceIndex, x, y, width, height) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Перед &lt;strong&gt;&lt;em&gt;«if (faceName != ») {»&lt;/em&gt;&lt;/strong&gt; надо написать:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;Window_Message.prototype.drawMessageFace = function() {
var faceName = $gameMessage.faceName();
var faceIndex = $gameMessage.faceIndex();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Вот теперь будут заменяться аватарки только в сообщениях.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt; Ссылки по теме&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&quot;hline&quot;&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Свежая версия скрипта &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/BigAvatar.js&quot;&gt;BigAvatar.js&lt;/a&gt; всегда доступна на github в разделе &lt;a href=&quot;https://github.com/murlab/rpg-maker-mv-plugins/blob/master/examples/&quot;&gt;примеров&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="archive" /><category term="rpg maker mv" /><category term="plugins" /><category term="javascript" /><category term="story" /><category term="уроки" /><summary type="html">Всем привет!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://murlab.github.io/05%20-%20Pishem%20plagin%20dla%20otobrazhenia%20bolshih%20avatarok/avatars_title.png" /></entry></feed>